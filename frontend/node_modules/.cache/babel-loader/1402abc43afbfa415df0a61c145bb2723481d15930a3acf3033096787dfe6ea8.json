{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  value: 'python',\n  label: 'Python'\n}, {\n  value: 'javascript',\n  label: 'JavaScript'\n}, {\n  value: 'java',\n  label: 'Java'\n}, {\n  value: 'cpp',\n  label: 'C++'\n}, {\n  value: 'csharp',\n  label: 'C#'\n}, {\n  value: 'typescript',\n  label: 'TypeScript'\n}, {\n  value: 'go',\n  label: 'Go'\n}, {\n  value: 'rust',\n  label: 'Rust'\n}];\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [code, setCode] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('python');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(true);\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isVoiceEnabled, setIsVoiceEnabled] = useState(false);\n  const socketRef = useRef();\n  const localStreamRef = useRef();\n  const peerConnectionsRef = useRef({});\n  const messagesEndRef = useRef();\n  const audioElementsRef = useRef({});\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (!storedUsername) {\n      navigate('/');\n      return;\n    }\n    setUsername(storedUsername);\n\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true\n    });\n\n    // Join room\n    socketRef.current.emit('join', {\n      room: roomId,\n      username: storedUsername\n    });\n\n    // Handle code updates\n    socketRef.current.on('code_updated', data => {\n      if (data.username !== storedUsername) {\n        setCode(data.code);\n      }\n    });\n\n    // Handle language updates\n    socketRef.current.on('language_updated', data => {\n      if (data.username !== storedUsername) {\n        setSelectedLanguage(data.language);\n      }\n    });\n\n    // Handle chat messages\n    socketRef.current.on('new_message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Handle user join/leave\n    socketRef.current.on('user_joined', data => {\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} joined the room`\n      }]);\n      setParticipants(prev => [...prev, data.username]);\n      if (isVoiceEnabled) {\n        initializePeerConnection(data.username);\n      }\n    });\n    socketRef.current.on('user_left', data => {\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} left the room`\n      }]);\n      setParticipants(prev => prev.filter(user => user !== data.username));\n      if (peerConnectionsRef.current[data.username]) {\n        peerConnectionsRef.current[data.username].close();\n        delete peerConnectionsRef.current[data.username];\n      }\n      if (audioElementsRef.current[data.username]) {\n        audioElementsRef.current[data.username].remove();\n        delete audioElementsRef.current[data.username];\n      }\n    });\n    return () => {\n      socketRef.current.disconnect();\n      Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      Object.values(audioElementsRef.current).forEach(audio => audio.remove());\n    };\n  }, [roomId, navigate, isVoiceEnabled]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const initializeWebRTC = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      localStreamRef.current = stream;\n      setIsConnected(true);\n      setIsVoiceEnabled(true);\n\n      // Create peer connections for existing participants\n      participants.forEach(participant => {\n        if (participant !== username) {\n          initializePeerConnection(participant);\n        }\n      });\n      socketRef.current.on('webrtc_offer', async data => {\n        if (data.from === username) return;\n        const pc = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n        peerConnectionsRef.current[data.from] = pc;\n        pc.onicecandidate = event => {\n          if (event.candidate) {\n            socketRef.current.emit('webrtc_ice', {\n              room: roomId,\n              candidate: event.candidate,\n              from: username\n            });\n          }\n        };\n        pc.ontrack = event => {\n          const audio = new Audio();\n          audio.srcObject = event.streams[0];\n          audio.autoplay = true;\n          audioElementsRef.current[data.from] = audio;\n        };\n        localStreamRef.current.getTracks().forEach(track => {\n          pc.addTrack(track, localStreamRef.current);\n        });\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        socketRef.current.emit('webrtc_answer', {\n          room: roomId,\n          answer: answer,\n          from: username\n        });\n      });\n      socketRef.current.on('webrtc_answer', async data => {\n        if (data.from === username) return;\n        const pc = peerConnectionsRef.current[data.from];\n        if (pc) {\n          await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n        }\n      });\n      socketRef.current.on('webrtc_ice', async data => {\n        if (data.from === username) return;\n        const pc = peerConnectionsRef.current[data.from];\n        if (pc) {\n          await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      });\n    } catch (error) {\n      console.error('Error initializing WebRTC:', error);\n      setIsConnected(false);\n      setIsVoiceEnabled(false);\n    }\n  };\n  const initializePeerConnection = async targetUsername => {\n    if (targetUsername === username) return;\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    peerConnectionsRef.current[targetUsername] = pc;\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        socketRef.current.emit('webrtc_ice', {\n          room: roomId,\n          candidate: event.candidate,\n          from: username\n        });\n      }\n    };\n    pc.ontrack = event => {\n      const audio = new Audio();\n      audio.srcObject = event.streams[0];\n      audio.autoplay = true;\n      audioElementsRef.current[targetUsername] = audio;\n    };\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        pc.addTrack(track, localStreamRef.current);\n      });\n    }\n    try {\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n      socketRef.current.emit('webrtc_offer', {\n        room: roomId,\n        offer: offer,\n        from: username\n      });\n    } catch (error) {\n      console.error('Error creating offer:', error);\n    }\n  };\n  const toggleVoiceChat = async () => {\n    if (!isVoiceEnabled) {\n      await initializeWebRTC();\n    } else {\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n      Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n      Object.values(audioElementsRef.current).forEach(audio => audio.remove());\n      peerConnectionsRef.current = {};\n      audioElementsRef.current = {};\n      setIsVoiceEnabled(false);\n      setIsConnected(false);\n    }\n  };\n  const toggleMute = () => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const handleCodeChange = value => {\n    setCode(value);\n    socketRef.current.emit('code_change', {\n      room: roomId,\n      code: value,\n      username: username\n    });\n  };\n  const handleLanguageChange = e => {\n    const newLanguage = e.target.value;\n    setSelectedLanguage(newLanguage);\n    socketRef.current.emit('language_change', {\n      room: roomId,\n      language: newLanguage,\n      username: username\n    });\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      socketRef.current.emit('chat_message', {\n        room: roomId,\n        message: message.trim(),\n        username: username\n      });\n      setMessage('');\n    }\n  };\n  const executeCode = async () => {\n    setIsExecuting(true);\n    setOutput('');\n    setError('');\n    try {\n      const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n        language: selectedLanguage,\n        version: LANGUAGE_VERSIONS[selectedLanguage],\n        files: [{\n          content: code\n        }]\n      });\n      if (response.data.run) {\n        setOutput(response.data.run.output);\n        if (response.data.run.stderr) {\n          setError(response.data.run.stderr);\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to execute code');\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-mono font-bold text-emerald-400\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLanguage,\n            onChange: handleLanguageChange,\n            className: \"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\",\n            children: LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.value,\n              children: lang.label\n            }, lang.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCode,\n          disabled: isExecuting,\n          className: \"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\",\n          children: isExecuting ? 'Executing...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\",\n          defaultLanguage: selectedLanguage,\n          value: code,\n          onChange: handleCodeChange,\n          theme: \"vs-dark\",\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14,\n            wordWrap: 'on',\n            automaticLayout: true,\n            fontFamily: 'Fira Code, monospace'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-mono font-bold text-emerald-400 mb-2\",\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\",\n          children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-400\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 36\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-400\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 flex flex-col border-l border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-2 h-2 rounded-full ${isConnected ? 'bg-emerald-500' : 'bg-red-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono font-bold text-emerald-400\",\n            children: [\"Participants (\", participants.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleVoiceChat,\n            className: `px-4 py-2 rounded-lg font-bold ${isVoiceEnabled ? 'bg-emerald-500 hover:bg-emerald-600' : 'bg-gray-600 hover:bg-gray-700'} text-white transition-colors`,\n            children: isVoiceEnabled ? 'Disable Voice' : 'Enable Voice'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this), isVoiceEnabled && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleMute,\n            className: `px-4 py-2 rounded-lg font-bold ${isMuted ? 'bg-red-500 hover:bg-red-600' : 'bg-emerald-500 hover:bg-emerald-600'} text-white transition-colors`,\n            children: isMuted ? 'Unmute' : 'Mute'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 p-2 rounded-lg bg-gray-800/50 backdrop-blur-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-emerald-400\",\n            children: [msg.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"nWnM9VD1qF2NywrGnB9fSAwtHZQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","Editor","axios","LANGUAGE_VERSIONS","jsxDEV","_jsxDEV","LANGUAGES","value","label","Room","_s","roomId","navigate","username","setUsername","code","setCode","selectedLanguage","setSelectedLanguage","messages","setMessages","message","setMessage","isMuted","setIsMuted","output","setOutput","error","setError","isExecuting","setIsExecuting","participants","setParticipants","isConnected","setIsConnected","isVoiceEnabled","setIsVoiceEnabled","socketRef","localStreamRef","peerConnectionsRef","messagesEndRef","audioElementsRef","storedUsername","localStorage","getItem","current","withCredentials","emit","room","on","data","language","prev","initializePeerConnection","filter","user","close","remove","disconnect","Object","values","forEach","pc","getTracks","track","stop","audio","_messagesEndRef$curre","scrollIntoView","behavior","initializeWebRTC","stream","navigator","mediaDevices","getUserMedia","participant","from","RTCPeerConnection","iceServers","urls","onicecandidate","event","candidate","ontrack","Audio","srcObject","streams","autoplay","addTrack","setRemoteDescription","RTCSessionDescription","offer","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","console","targetUsername","createOffer","toggleVoiceChat","toggleMute","getAudioTracks","enabled","handleCodeChange","handleLanguageChange","e","newLanguage","target","handleSendMessage","preventDefault","trim","executeCode","response","post","version","files","content","run","stderr","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","lang","onClick","disabled","height","defaultLanguage","theme","options","minimap","fontSize","wordWrap","automaticLayout","fontFamily","length","msg","index","ref","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\n\nconst LANGUAGES = [\n    { value: 'python', label: 'Python' },\n    { value: 'javascript', label: 'JavaScript' },\n    { value: 'java', label: 'Java' },\n    { value: 'cpp', label: 'C++' },\n    { value: 'csharp', label: 'C#' },\n    { value: 'typescript', label: 'TypeScript' },\n    { value: 'go', label: 'Go' },\n    { value: 'rust', label: 'Rust' }\n];\n\nconst Room = () => {\n    const { roomId } = useParams();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [code, setCode] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('python');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [isMuted, setIsMuted] = useState(true);\n    const [output, setOutput] = useState('');\n    const [error, setError] = useState('');\n    const [isExecuting, setIsExecuting] = useState(false);\n    const [participants, setParticipants] = useState([]);\n    const [isConnected, setIsConnected] = useState(false);\n    const [isVoiceEnabled, setIsVoiceEnabled] = useState(false);\n    \n    const socketRef = useRef();\n    const localStreamRef = useRef();\n    const peerConnectionsRef = useRef({});\n    const messagesEndRef = useRef();\n    const audioElementsRef = useRef({});\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem('username');\n        if (!storedUsername) {\n            navigate('/');\n            return;\n        }\n        setUsername(storedUsername);\n\n        // Initialize socket connection\n        socketRef.current = io('http://localhost:5001', {\n            withCredentials: true\n        });\n\n        // Join room\n        socketRef.current.emit('join', { room: roomId, username: storedUsername });\n\n        // Handle code updates\n        socketRef.current.on('code_updated', (data) => {\n            if (data.username !== storedUsername) {\n                setCode(data.code);\n            }\n        });\n\n        // Handle language updates\n        socketRef.current.on('language_updated', (data) => {\n            if (data.username !== storedUsername) {\n                setSelectedLanguage(data.language);\n            }\n        });\n\n        // Handle chat messages\n        socketRef.current.on('new_message', (data) => {\n            setMessages(prev => [...prev, data]);\n        });\n\n        // Handle user join/leave\n        socketRef.current.on('user_joined', (data) => {\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} joined the room` }]);\n            setParticipants(prev => [...prev, data.username]);\n            if (isVoiceEnabled) {\n                initializePeerConnection(data.username);\n            }\n        });\n\n        socketRef.current.on('user_left', (data) => {\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} left the room` }]);\n            setParticipants(prev => prev.filter(user => user !== data.username));\n            if (peerConnectionsRef.current[data.username]) {\n                peerConnectionsRef.current[data.username].close();\n                delete peerConnectionsRef.current[data.username];\n            }\n            if (audioElementsRef.current[data.username]) {\n                audioElementsRef.current[data.username].remove();\n                delete audioElementsRef.current[data.username];\n            }\n        });\n\n        return () => {\n            socketRef.current.disconnect();\n            Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n            if (localStreamRef.current) {\n                localStreamRef.current.getTracks().forEach(track => track.stop());\n            }\n            Object.values(audioElementsRef.current).forEach(audio => audio.remove());\n        };\n    }, [roomId, navigate, isVoiceEnabled]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const initializeWebRTC = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            localStreamRef.current = stream;\n            setIsConnected(true);\n            setIsVoiceEnabled(true);\n\n            // Create peer connections for existing participants\n            participants.forEach(participant => {\n                if (participant !== username) {\n                    initializePeerConnection(participant);\n                }\n            });\n\n            socketRef.current.on('webrtc_offer', async (data) => {\n                if (data.from === username) return;\n\n                const pc = new RTCPeerConnection({\n                    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n                });\n\n                peerConnectionsRef.current[data.from] = pc;\n\n                pc.onicecandidate = (event) => {\n                    if (event.candidate) {\n                        socketRef.current.emit('webrtc_ice', {\n                            room: roomId,\n                            candidate: event.candidate,\n                            from: username\n                        });\n                    }\n                };\n\n                pc.ontrack = (event) => {\n                    const audio = new Audio();\n                    audio.srcObject = event.streams[0];\n                    audio.autoplay = true;\n                    audioElementsRef.current[data.from] = audio;\n                };\n\n                localStreamRef.current.getTracks().forEach(track => {\n                    pc.addTrack(track, localStreamRef.current);\n                });\n\n                await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n                const answer = await pc.createAnswer();\n                await pc.setLocalDescription(answer);\n\n                socketRef.current.emit('webrtc_answer', {\n                    room: roomId,\n                    answer: answer,\n                    from: username\n                });\n            });\n\n            socketRef.current.on('webrtc_answer', async (data) => {\n                if (data.from === username) return;\n                const pc = peerConnectionsRef.current[data.from];\n                if (pc) {\n                    await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n                }\n            });\n\n            socketRef.current.on('webrtc_ice', async (data) => {\n                if (data.from === username) return;\n                const pc = peerConnectionsRef.current[data.from];\n                if (pc) {\n                    await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n                }\n            });\n        } catch (error) {\n            console.error('Error initializing WebRTC:', error);\n            setIsConnected(false);\n            setIsVoiceEnabled(false);\n        }\n    };\n\n    const initializePeerConnection = async (targetUsername) => {\n        if (targetUsername === username) return;\n\n        const pc = new RTCPeerConnection({\n            iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n        });\n\n        peerConnectionsRef.current[targetUsername] = pc;\n\n        pc.onicecandidate = (event) => {\n            if (event.candidate) {\n                socketRef.current.emit('webrtc_ice', {\n                    room: roomId,\n                    candidate: event.candidate,\n                    from: username\n                });\n            }\n        };\n\n        pc.ontrack = (event) => {\n            const audio = new Audio();\n            audio.srcObject = event.streams[0];\n            audio.autoplay = true;\n            audioElementsRef.current[targetUsername] = audio;\n        };\n\n        if (localStreamRef.current) {\n            localStreamRef.current.getTracks().forEach(track => {\n                pc.addTrack(track, localStreamRef.current);\n            });\n        }\n\n        try {\n            const offer = await pc.createOffer();\n            await pc.setLocalDescription(offer);\n\n            socketRef.current.emit('webrtc_offer', {\n                room: roomId,\n                offer: offer,\n                from: username\n            });\n        } catch (error) {\n            console.error('Error creating offer:', error);\n        }\n    };\n\n    const toggleVoiceChat = async () => {\n        if (!isVoiceEnabled) {\n            await initializeWebRTC();\n        } else {\n            if (localStreamRef.current) {\n                localStreamRef.current.getTracks().forEach(track => track.stop());\n            }\n            Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n            Object.values(audioElementsRef.current).forEach(audio => audio.remove());\n            peerConnectionsRef.current = {};\n            audioElementsRef.current = {};\n            setIsVoiceEnabled(false);\n            setIsConnected(false);\n        }\n    };\n\n    const toggleMute = () => {\n        if (localStreamRef.current) {\n            localStreamRef.current.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n            });\n            setIsMuted(!isMuted);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        socketRef.current.emit('code_change', {\n            room: roomId,\n            code: value,\n            username: username\n        });\n    };\n\n    const handleLanguageChange = (e) => {\n        const newLanguage = e.target.value;\n        setSelectedLanguage(newLanguage);\n        socketRef.current.emit('language_change', {\n            room: roomId,\n            language: newLanguage,\n            username: username\n        });\n    };\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        if (message.trim()) {\n            socketRef.current.emit('chat_message', {\n                room: roomId,\n                message: message.trim(),\n                username: username\n            });\n            setMessage('');\n        }\n    };\n\n    const executeCode = async () => {\n        setIsExecuting(true);\n        setOutput('');\n        setError('');\n        \n        try {\n            const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n                language: selectedLanguage,\n                version: LANGUAGE_VERSIONS[selectedLanguage],\n                files: [\n                    {\n                        content: code\n                    }\n                ]\n            });\n            \n            if (response.data.run) {\n                setOutput(response.data.run.output);\n                if (response.data.run.stderr) {\n                    setError(response.data.run.stderr);\n                }\n            }\n        } catch (err) {\n            setError(err.response?.data?.error || 'Failed to execute code');\n        } finally {\n            setIsExecuting(false);\n        }\n    };\n\n    return (\n        <div className=\"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\">\n            {/* Left Panel - Code Editor */}\n            <div className=\"w-2/3 flex flex-col\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\">\n                    <div className=\"flex items-center space-x-4\">\n                        <span className=\"text-lg font-mono font-bold text-emerald-400\">Room: {roomId}</span>\n                        <select\n                            value={selectedLanguage}\n                            onChange={handleLanguageChange}\n                            className=\"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        >\n                            {LANGUAGES.map(lang => (\n                                <option key={lang.value} value={lang.value}>\n                                    {lang.label}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <button\n                        onClick={executeCode}\n                        disabled={isExecuting}\n                        className=\"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\"\n                    >\n                        {isExecuting ? 'Executing...' : 'Run Code'}\n                    </button>\n                </div>\n                <div className=\"flex-1\">\n                    <Editor\n                        height=\"100%\"\n                        defaultLanguage={selectedLanguage}\n                        value={code}\n                        onChange={handleCodeChange}\n                        theme=\"vs-dark\"\n                        options={{\n                            minimap: { enabled: false },\n                            fontSize: 14,\n                            wordWrap: 'on',\n                            automaticLayout: true,\n                            fontFamily: 'Fira Code, monospace'\n                        }}\n                    />\n                </div>\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <h3 className=\"text-lg font-mono font-bold text-emerald-400 mb-2\">Output</h3>\n                    <div className=\"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\">\n                        {output && <div className=\"text-green-400\">{output}</div>}\n                        {error && <div className=\"text-red-400\">{error}</div>}\n                    </div>\n                </div>\n            </div>\n\n            {/* Right Panel - Chat and Voice */}\n            <div className=\"w-1/3 flex flex-col border-l border-gray-700\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                        <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-emerald-500' : 'bg-red-500'}`}></div>\n                        <span className=\"font-mono font-bold text-emerald-400\">Participants ({participants.length})</span>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                        <button\n                            onClick={toggleVoiceChat}\n                            className={`px-4 py-2 rounded-lg font-bold ${\n                                isVoiceEnabled ? 'bg-emerald-500 hover:bg-emerald-600' : 'bg-gray-600 hover:bg-gray-700'\n                            } text-white transition-colors`}\n                        >\n                            {isVoiceEnabled ? 'Disable Voice' : 'Enable Voice'}\n                        </button>\n                        {isVoiceEnabled && (\n                            <button\n                                onClick={toggleMute}\n                                className={`px-4 py-2 rounded-lg font-bold ${\n                                    isMuted ? 'bg-red-500 hover:bg-red-600' : 'bg-emerald-500 hover:bg-emerald-600'\n                                } text-white transition-colors`}\n                            >\n                                {isMuted ? 'Unmute' : 'Mute'}\n                            </button>\n                        )}\n                    </div>\n                </div>\n                <div className=\"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\">\n                    {messages.map((msg, index) => (\n                        <div key={index} className=\"mb-2 p-2 rounded-lg bg-gray-800/50 backdrop-blur-sm\">\n                            <span className=\"font-bold text-emerald-400\">{msg.username}: </span>\n                            <span>{msg.message}</span>\n                        </div>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </div>\n                <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <div className=\"flex\">\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                            className=\"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Room; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}