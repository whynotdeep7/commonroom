{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  value: 'python',\n  label: 'Python'\n}, {\n  value: 'javascript',\n  label: 'JavaScript'\n}, {\n  value: 'java',\n  label: 'Java'\n}, {\n  value: 'cpp',\n  label: 'C++'\n}, {\n  value: 'csharp',\n  label: 'C#'\n}, {\n  value: 'typescript',\n  label: 'TypeScript'\n}, {\n  value: 'go',\n  label: 'Go'\n}, {\n  value: 'rust',\n  label: 'Rust'\n}];\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [code, setCode] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('python');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(true);\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const socketRef = useRef();\n  const localStreamRef = useRef();\n  const peerConnectionsRef = useRef({});\n  const messagesEndRef = useRef();\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (!storedUsername) {\n      navigate('/');\n      return;\n    }\n    setUsername(storedUsername);\n\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true\n    });\n\n    // Join room\n    socketRef.current.emit('join', {\n      room: roomId,\n      username: storedUsername\n    });\n\n    // Handle code updates\n    socketRef.current.on('code_updated', data => {\n      if (data.username !== storedUsername) {\n        setCode(data.code);\n      }\n    });\n\n    // Handle language updates\n    socketRef.current.on('language_updated', data => {\n      if (data.username !== storedUsername) {\n        setSelectedLanguage(data.language);\n      }\n    });\n\n    // Handle chat messages\n    socketRef.current.on('new_message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Handle user join/leave\n    socketRef.current.on('user_joined', data => {\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} joined the room`\n      }]);\n    });\n    socketRef.current.on('user_left', data => {\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} left the room`\n      }]);\n    });\n\n    // Initialize WebRTC\n    initializeWebRTC();\n    return () => {\n      socketRef.current.disconnect();\n      Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [roomId, navigate]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const initializeWebRTC = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      localStreamRef.current = stream;\n      socketRef.current.on('webrtc_offer', async data => {\n        if (data.from === username) return;\n        const pc = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n        peerConnectionsRef.current[data.from] = pc;\n        pc.onicecandidate = event => {\n          if (event.candidate) {\n            socketRef.current.emit('webrtc_ice', {\n              room: roomId,\n              candidate: event.candidate,\n              from: username\n            });\n          }\n        };\n        pc.ontrack = event => {\n          const audio = new Audio();\n          audio.srcObject = event.streams[0];\n          audio.play();\n        };\n        localStreamRef.current.getTracks().forEach(track => {\n          pc.addTrack(track, localStreamRef.current);\n        });\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        socketRef.current.emit('webrtc_answer', {\n          room: roomId,\n          answer: answer,\n          from: username\n        });\n      });\n      socketRef.current.on('webrtc_answer', async data => {\n        if (data.from === username) return;\n        const pc = peerConnectionsRef.current[data.from];\n        if (pc) {\n          await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n        }\n      });\n      socketRef.current.on('webrtc_ice', async data => {\n        if (data.from === username) return;\n        const pc = peerConnectionsRef.current[data.from];\n        if (pc) {\n          await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      });\n    } catch (error) {\n      console.error('Error initializing WebRTC:', error);\n    }\n  };\n  const handleCodeChange = value => {\n    setCode(value);\n    socketRef.current.emit('code_change', {\n      room: roomId,\n      code: value,\n      username: username\n    });\n  };\n  const handleLanguageChange = e => {\n    const newLanguage = e.target.value;\n    setSelectedLanguage(newLanguage);\n    socketRef.current.emit('language_change', {\n      room: roomId,\n      language: newLanguage,\n      username: username\n    });\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      socketRef.current.emit('chat_message', {\n        room: roomId,\n        message: message.trim(),\n        username: username\n      });\n      setMessage('');\n    }\n  };\n  const toggleMute = () => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const executeCode = async () => {\n    setIsExecuting(true);\n    setOutput('');\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:5001/execute-code', {\n        code,\n        language: selectedLanguage\n      });\n      if (response.data.output) {\n        setOutput(response.data.output);\n      }\n      if (response.data.error) {\n        setError(response.data.error);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to execute code');\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLanguage,\n          onChange: handleLanguageChange,\n          className: \"px-4 py-2 border rounded-lg\",\n          children: LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang.value,\n            children: lang.label\n          }, lang.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCode,\n          disabled: isExecuting,\n          className: \"ml-4 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50\",\n          children: isExecuting ? 'Executing...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\",\n          defaultLanguage: selectedLanguage,\n          value: code,\n          onChange: handleCodeChange,\n          theme: \"vs-dark\",\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14,\n            wordWrap: 'on',\n            automaticLayout: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto\",\n          children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-400\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 36\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-400\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 flex flex-col border-l\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-white shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          className: `px-4 py-2 rounded-lg ${isMuted ? 'bg-red-500' : 'bg-green-500'} text-white`,\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-auto\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: [msg.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-white border-t\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"flex-1 px-4 py-2 border rounded-l-lg focus:outline-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-blue-500 text-white rounded-r-lg hover:bg-blue-600\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"n05OtBtOtk+B1l2bocpeL6YI944=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","Editor","axios","jsxDEV","_jsxDEV","LANGUAGES","value","label","Room","_s","roomId","navigate","username","setUsername","code","setCode","selectedLanguage","setSelectedLanguage","messages","setMessages","message","setMessage","isMuted","setIsMuted","output","setOutput","error","setError","isExecuting","setIsExecuting","socketRef","localStreamRef","peerConnectionsRef","messagesEndRef","storedUsername","localStorage","getItem","current","withCredentials","emit","room","on","data","language","prev","initializeWebRTC","disconnect","Object","values","forEach","pc","close","getTracks","track","stop","_messagesEndRef$curre","scrollIntoView","behavior","stream","navigator","mediaDevices","getUserMedia","audio","from","RTCPeerConnection","iceServers","urls","onicecandidate","event","candidate","ontrack","Audio","srcObject","streams","play","addTrack","setRemoteDescription","RTCSessionDescription","offer","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","console","handleCodeChange","handleLanguageChange","e","newLanguage","target","handleSendMessage","preventDefault","trim","toggleMute","getAudioTracks","enabled","executeCode","response","post","err","_err$response","_err$response$data","className","children","onChange","map","lang","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","height","defaultLanguage","theme","options","minimap","fontSize","wordWrap","automaticLayout","msg","index","ref","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\n\nconst LANGUAGES = [\n    { value: 'python', label: 'Python' },\n    { value: 'javascript', label: 'JavaScript' },\n    { value: 'java', label: 'Java' },\n    { value: 'cpp', label: 'C++' },\n    { value: 'csharp', label: 'C#' },\n    { value: 'typescript', label: 'TypeScript' },\n    { value: 'go', label: 'Go' },\n    { value: 'rust', label: 'Rust' }\n];\n\nconst Room = () => {\n    const { roomId } = useParams();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [code, setCode] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('python');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [isMuted, setIsMuted] = useState(true);\n    const [output, setOutput] = useState('');\n    const [error, setError] = useState('');\n    const [isExecuting, setIsExecuting] = useState(false);\n    \n    const socketRef = useRef();\n    const localStreamRef = useRef();\n    const peerConnectionsRef = useRef({});\n    const messagesEndRef = useRef();\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem('username');\n        if (!storedUsername) {\n            navigate('/');\n            return;\n        }\n        setUsername(storedUsername);\n\n        // Initialize socket connection\n        socketRef.current = io('http://localhost:5001', {\n            withCredentials: true\n        });\n\n        // Join room\n        socketRef.current.emit('join', { room: roomId, username: storedUsername });\n\n        // Handle code updates\n        socketRef.current.on('code_updated', (data) => {\n            if (data.username !== storedUsername) {\n                setCode(data.code);\n            }\n        });\n\n        // Handle language updates\n        socketRef.current.on('language_updated', (data) => {\n            if (data.username !== storedUsername) {\n                setSelectedLanguage(data.language);\n            }\n        });\n\n        // Handle chat messages\n        socketRef.current.on('new_message', (data) => {\n            setMessages(prev => [...prev, data]);\n        });\n\n        // Handle user join/leave\n        socketRef.current.on('user_joined', (data) => {\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} joined the room` }]);\n        });\n\n        socketRef.current.on('user_left', (data) => {\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} left the room` }]);\n        });\n\n        // Initialize WebRTC\n        initializeWebRTC();\n\n        return () => {\n            socketRef.current.disconnect();\n            Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n            if (localStreamRef.current) {\n                localStreamRef.current.getTracks().forEach(track => track.stop());\n            }\n        };\n    }, [roomId, navigate]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const initializeWebRTC = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            localStreamRef.current = stream;\n\n            socketRef.current.on('webrtc_offer', async (data) => {\n                if (data.from === username) return;\n\n                const pc = new RTCPeerConnection({\n                    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n                });\n\n                peerConnectionsRef.current[data.from] = pc;\n\n                pc.onicecandidate = (event) => {\n                    if (event.candidate) {\n                        socketRef.current.emit('webrtc_ice', {\n                            room: roomId,\n                            candidate: event.candidate,\n                            from: username\n                        });\n                    }\n                };\n\n                pc.ontrack = (event) => {\n                    const audio = new Audio();\n                    audio.srcObject = event.streams[0];\n                    audio.play();\n                };\n\n                localStreamRef.current.getTracks().forEach(track => {\n                    pc.addTrack(track, localStreamRef.current);\n                });\n\n                await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n                const answer = await pc.createAnswer();\n                await pc.setLocalDescription(answer);\n\n                socketRef.current.emit('webrtc_answer', {\n                    room: roomId,\n                    answer: answer,\n                    from: username\n                });\n            });\n\n            socketRef.current.on('webrtc_answer', async (data) => {\n                if (data.from === username) return;\n                const pc = peerConnectionsRef.current[data.from];\n                if (pc) {\n                    await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n                }\n            });\n\n            socketRef.current.on('webrtc_ice', async (data) => {\n                if (data.from === username) return;\n                const pc = peerConnectionsRef.current[data.from];\n                if (pc) {\n                    await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n                }\n            });\n        } catch (error) {\n            console.error('Error initializing WebRTC:', error);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        socketRef.current.emit('code_change', {\n            room: roomId,\n            code: value,\n            username: username\n        });\n    };\n\n    const handleLanguageChange = (e) => {\n        const newLanguage = e.target.value;\n        setSelectedLanguage(newLanguage);\n        socketRef.current.emit('language_change', {\n            room: roomId,\n            language: newLanguage,\n            username: username\n        });\n    };\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        if (message.trim()) {\n            socketRef.current.emit('chat_message', {\n                room: roomId,\n                message: message.trim(),\n                username: username\n            });\n            setMessage('');\n        }\n    };\n\n    const toggleMute = () => {\n        if (localStreamRef.current) {\n            localStreamRef.current.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n            });\n            setIsMuted(!isMuted);\n        }\n    };\n\n    const executeCode = async () => {\n        setIsExecuting(true);\n        setOutput('');\n        setError('');\n        \n        try {\n            const response = await axios.post('http://localhost:5001/execute-code', {\n                code,\n                language: selectedLanguage\n            });\n            \n            if (response.data.output) {\n                setOutput(response.data.output);\n            }\n            if (response.data.error) {\n                setError(response.data.error);\n            }\n        } catch (err) {\n            setError(err.response?.data?.error || 'Failed to execute code');\n        } finally {\n            setIsExecuting(false);\n        }\n    };\n\n    return (\n        <div className=\"flex h-screen bg-gray-100\">\n            {/* Left Panel - Code Editor */}\n            <div className=\"w-2/3 flex flex-col\">\n                <div className=\"p-4 bg-white shadow\">\n                    <select\n                        value={selectedLanguage}\n                        onChange={handleLanguageChange}\n                        className=\"px-4 py-2 border rounded-lg\"\n                    >\n                        {LANGUAGES.map(lang => (\n                            <option key={lang.value} value={lang.value}>\n                                {lang.label}\n                            </option>\n                        ))}\n                    </select>\n                    <button\n                        onClick={executeCode}\n                        disabled={isExecuting}\n                        className=\"ml-4 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:opacity-50\"\n                    >\n                        {isExecuting ? 'Executing...' : 'Run Code'}\n                    </button>\n                </div>\n                <div className=\"flex-1\">\n                    <Editor\n                        height=\"100%\"\n                        defaultLanguage={selectedLanguage}\n                        value={code}\n                        onChange={handleCodeChange}\n                        theme=\"vs-dark\"\n                        options={{\n                            minimap: { enabled: false },\n                            fontSize: 14,\n                            wordWrap: 'on',\n                            automaticLayout: true\n                        }}\n                    />\n                </div>\n                <div className=\"p-4 bg-white shadow\">\n                    <h3 className=\"text-lg font-semibold mb-2\">Output</h3>\n                    <div className=\"bg-black text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto\">\n                        {output && <div className=\"text-green-400\">{output}</div>}\n                        {error && <div className=\"text-red-400\">{error}</div>}\n                    </div>\n                </div>\n            </div>\n\n            {/* Right Panel - Chat and Voice */}\n            <div className=\"w-1/3 flex flex-col border-l\">\n                <div className=\"p-4 bg-white shadow\">\n                    <button\n                        onClick={toggleMute}\n                        className={`px-4 py-2 rounded-lg ${\n                            isMuted ? 'bg-red-500' : 'bg-green-500'\n                        } text-white`}\n                    >\n                        {isMuted ? 'Unmute' : 'Mute'}\n                    </button>\n                </div>\n                <div className=\"flex-1 p-4 overflow-auto\">\n                    {messages.map((msg, index) => (\n                        <div key={index} className=\"mb-2\">\n                            <span className=\"font-semibold\">{msg.username}: </span>\n                            <span>{msg.message}</span>\n                        </div>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </div>\n                <form onSubmit={handleSendMessage} className=\"p-4 bg-white border-t\">\n                    <div className=\"flex\">\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                            className=\"flex-1 px-4 py-2 border rounded-l-lg focus:outline-none\"\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"px-4 py-2 bg-blue-500 text-white rounded-r-lg hover:bg-blue-600\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Room; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}