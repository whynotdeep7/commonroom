{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  value: 'python',\n  label: 'Python'\n}, {\n  value: 'javascript',\n  label: 'JavaScript'\n}, {\n  value: 'java',\n  label: 'Java'\n}, {\n  value: 'cpp',\n  label: 'C++'\n}, {\n  value: 'csharp',\n  label: 'C#'\n}, {\n  value: 'typescript',\n  label: 'TypeScript'\n}, {\n  value: 'go',\n  label: 'Go'\n}, {\n  value: 'rust',\n  label: 'Rust'\n}];\n\n// Map language values to Monaco editor language ids\nconst LANGUAGE_MAPPING = {\n  'python': 'python',\n  'javascript': 'javascript',\n  'java': 'java',\n  'cpp': 'cpp',\n  'csharp': 'csharp',\n  'typescript': 'typescript',\n  'go': 'go',\n  'rust': 'rust'\n};\n\n// Initial code templates for each language\nconst CODE_TEMPLATES = {\n  'python': '# Welcome to Python\\n\\ndef greeting(name):\\n    return f\"Hello, {name}!\"\\n\\n# Main program\\nif __name__ == \"__main__\":\\n    print(greeting(\"World\"))\\n    # Add your code here',\n  'javascript': '// Welcome to JavaScript\\n\\nfunction greeting(name) {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n  'java': '// Welcome to Java\\n\\npublic class Main {\\n    public static String greeting(String name) {\\n        return \"Hello, \" + name + \"!\";\\n    }\\n    \\n    public static void main(String[] args) {\\n        System.out.println(greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n  'cpp': '// Welcome to C++\\n#include <iostream>\\n#include <string>\\n\\nstd::string greeting(const std::string& name) {\\n    return \"Hello, \" + name + \"!\";\\n}\\n\\nint main() {\\n    std::cout << greeting(\"World\") << std::endl;\\n    // Add your code here\\n    return 0;\\n}',\n  'csharp': '// Welcome to C#\\nusing System;\\n\\nclass Program {\\n    static string Greeting(string name) {\\n        return $\"Hello, {name}!\";\\n    }\\n    \\n    static void Main() {\\n        Console.WriteLine(Greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n  'typescript': '// Welcome to TypeScript\\n\\nfunction greeting(name: string): string {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n  'go': '// Welcome to Go\\npackage main\\n\\nimport (\\n    \"fmt\"\\n)\\n\\nfunc greeting(name string) string {\\n    return fmt.Sprintf(\"Hello, %s!\", name)\\n}\\n\\nfunc main() {\\n    fmt.Println(greeting(\"World\"))\\n    // Add your code here\\n}',\n  'rust': '// Welcome to Rust\\n\\nfn greeting(name: &str) -> String {\\n    format!(\"Hello, {}!\", name)\\n}\\n\\nfn main() {\\n    println!(\"{}\", greeting(\"World\"));\\n    // Add your code here\\n}'\n};\n\n// WebRTC Configuration\nconst rtcConfiguration = {\n  iceServers: [{\n    urls: 'stun:stun.l.google.com:19302'\n  }, {\n    urls: 'stun:stun1.l.google.com:19302'\n  }, {\n    urls: 'stun:stun2.l.google.com:19302'\n  }, {\n    urls: 'turn:openrelay.metered.ca:80',\n    username: 'openrelayproject',\n    credential: 'openrelayproject'\n  }, {\n    urls: 'turn:openrelay.metered.ca:443',\n    username: 'openrelayproject',\n    credential: 'openrelayproject'\n  }]\n};\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [code, setCode] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('python');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(true);\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isVoiceEnabled, setIsVoiceEnabled] = useState(false);\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\n  const socketRef = useRef();\n  const localStreamRef = useRef();\n  const peerConnectionsRef = useRef({});\n  const messagesEndRef = useRef();\n  const editorRef = useRef(null);\n\n  // Function to handle editor mounting\n  const handleEditorDidMount = editor => {\n    editorRef.current = editor;\n  };\n\n  // Clean up peer connection\n  const cleanupPeerConnection = peerUsername => {\n    if (peerConnectionsRef.current[peerUsername]) {\n      console.log(`Cleaning up peer connection with ${peerUsername}`);\n      peerConnectionsRef.current[peerUsername].close();\n      delete peerConnectionsRef.current[peerUsername];\n    }\n\n    // Remove audio element\n    const audioEl = document.getElementById(`audio-${peerUsername}`);\n    if (audioEl) {\n      audioEl.remove();\n    }\n  };\n\n  // Clean up all peer connections\n  const cleanupAllPeerConnections = useCallback(() => {\n    console.log(\"Cleaning up all peer connections\");\n    Object.keys(peerConnectionsRef.current).forEach(cleanupPeerConnection);\n\n    // Stop local media stream\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        track.stop();\n      });\n      localStreamRef.current = null;\n    }\n\n    // Remove all audio elements\n    document.querySelectorAll('audio[id^=\"audio-\"]').forEach(el => el.remove());\n  }, []);\n\n  // Create a new peer connection\n  const createPeerConnection = useCallback(targetUsername => {\n    if (targetUsername === username) return null;\n    console.log(`Creating peer connection with ${targetUsername}`);\n\n    // Close existing connection if it exists\n    if (peerConnectionsRef.current[targetUsername]) {\n      peerConnectionsRef.current[targetUsername].close();\n    }\n    const pc = new RTCPeerConnection(rtcConfiguration);\n    peerConnectionsRef.current[targetUsername] = pc;\n\n    // Log connection state changes\n    pc.onconnectionstatechange = () => {\n      console.log(`Connection state with ${targetUsername}: ${pc.connectionState}`);\n      if (pc.connectionState === 'connected') {\n        console.log(`Successfully connected to ${targetUsername}`);\n      } else if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected' || pc.connectionState === 'closed') {\n        console.log(`Connection with ${targetUsername} is ${pc.connectionState}`);\n        if (pc.connectionState === 'failed') {\n          // Attempt to reconnect\n          setTimeout(() => {\n            if (isVoiceEnabled && localStreamRef.current) {\n              cleanupPeerConnection(targetUsername);\n              // Use the functional version to avoid stale references\n              if (socketRef.current && socketRef.current.connected) {\n                createAndSendOffer(targetUsername);\n              }\n            }\n          }, 2000);\n        }\n      }\n    };\n    pc.oniceconnectionstatechange = () => {\n      console.log(`ICE connection state with ${targetUsername}: ${pc.iceConnectionState}`);\n      if (pc.iceConnectionState === 'failed') {\n        // Try to restart ICE\n        pc.restartIce();\n      }\n    };\n\n    // Add local stream to the connection\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        console.log(`Adding track to peer connection with ${targetUsername}`, track);\n        pc.addTrack(track, localStreamRef.current);\n      });\n    } else {\n      console.error(\"Local stream not available when creating peer connection\");\n      return null;\n    }\n\n    // Handle ICE candidates\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        console.log(`Sending ICE candidate to ${targetUsername}`, event.candidate);\n        socketRef.current.emit('webrtc_ice', {\n          room: roomId,\n          candidate: event.candidate,\n          from: username,\n          to: targetUsername\n        });\n      }\n    };\n\n    // Handle incoming audio stream\n    pc.ontrack = event => {\n      console.log(`Received track from ${targetUsername}`, event.streams[0]);\n      const audioEl = document.createElement('audio');\n      audioEl.srcObject = event.streams[0];\n      audioEl.id = `audio-${targetUsername}`;\n      audioEl.autoplay = true;\n      audioEl.controls = false;\n      document.body.appendChild(audioEl);\n    };\n    return pc;\n  }, [roomId, username, isVoiceEnabled]);\n\n  // Helper function to create and send offer\n  const createAndSendOffer = useCallback(async targetUsername => {\n    const pc = createPeerConnection(targetUsername);\n    if (!pc) return;\n    try {\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n      console.log(`Sending offer to ${targetUsername}`, offer);\n      socketRef.current.emit('webrtc_offer', {\n        room: roomId,\n        offer: offer,\n        from: username,\n        to: targetUsername\n      });\n    } catch (error) {\n      console.error('Error creating offer:', error);\n    }\n  }, [roomId, username, createPeerConnection]);\n\n  // Initialize peer connection and send offer\n  const initializePeerConnection = useCallback(targetUsername => {\n    createAndSendOffer(targetUsername);\n  }, [createAndSendOffer]);\n\n  // Set up WebRTC event handlers\n  const setupWebRTCEventHandlers = () => {\n    // Clear existing handlers to prevent duplicates\n    socketRef.current.off('webrtc_offer');\n    socketRef.current.off('webrtc_answer');\n    socketRef.current.off('webrtc_ice');\n\n    // Handle incoming offer\n    socketRef.current.on('webrtc_offer', async data => {\n      if (data.from === username || data.to && data.to !== username) return;\n      console.log(`Received offer from ${data.from}`, data.offer);\n      const pc = createPeerConnection(data.from);\n      if (!pc) return;\n      try {\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        console.log(`Sending answer to ${data.from}`, answer);\n        socketRef.current.emit('webrtc_answer', {\n          room: roomId,\n          answer: answer,\n          from: username,\n          to: data.from\n        });\n      } catch (error) {\n        console.error('Error handling offer:', error);\n      }\n    });\n\n    // Handle incoming answer\n    socketRef.current.on('webrtc_answer', async data => {\n      if (data.from === username || data.to && data.to !== username) return;\n      console.log(`Received answer from ${data.from}`, data.answer);\n      const pc = peerConnectionsRef.current[data.from];\n      if (pc) {\n        try {\n          await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n          console.log(`Successfully set remote description for ${data.from}`);\n        } catch (error) {\n          console.error('Error handling answer:', error);\n        }\n      }\n    });\n\n    // Handle ICE candidates\n    socketRef.current.on('webrtc_ice', async data => {\n      if (data.from === username || data.to && data.to !== username) return;\n      console.log(`Received ICE candidate from ${data.from}`, data.candidate);\n      const pc = peerConnectionsRef.current[data.from];\n      if (pc) {\n        try {\n          await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n          console.log(`Successfully added ICE candidate for ${data.from}`);\n        } catch (error) {\n          console.error('Error handling ICE candidate:', error);\n        }\n      }\n    });\n  };\n\n  // Initialize WebRTC\n  const initializeWebRTC = async () => {\n    try {\n      console.log(\"Initializing WebRTC...\");\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      console.log(\"User media acquired successfully\");\n      localStreamRef.current = stream;\n      setIsVoiceEnabled(true);\n      setIsConnected(true);\n      setIsMuted(false); // Start unmuted by default\n\n      // Set up WebRTC event handlers\n      setupWebRTCEventHandlers();\n      console.log(\"WebRTC initialized successfully\");\n    } catch (error) {\n      console.error('Error initializing WebRTC:', error);\n      alert(\"Error accessing microphone. Please make sure your microphone is connected and you've granted permission.\");\n      setIsVoiceEnabled(false);\n      setIsConnected(false);\n    }\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (!storedUsername) {\n      navigate('/');\n      return;\n    }\n    setUsername(storedUsername);\n\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true,\n      reconnection: true,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      reconnectionAttempts: Infinity\n    });\n\n    // Socket connection events\n    socketRef.current.on('connect', () => {\n      console.log('Socket connected');\n      setIsSocketConnected(true);\n\n      // Join room upon connection\n      socketRef.current.emit('join', {\n        room: roomId,\n        username: storedUsername\n      });\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Socket disconnected');\n      setIsSocketConnected(false);\n    });\n    socketRef.current.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setIsSocketConnected(false);\n    });\n\n    // Handle initial state\n    socketRef.current.on('initial_state', data => {\n      console.log('Received initial state:', data);\n      if (data.code) setCode(data.code);\n      if (data.language) setSelectedLanguage(data.language);\n      if (data.participants) setParticipants(data.participants);\n    });\n\n    // Handle code updates\n    socketRef.current.on('code_updated', data => {\n      console.log('Code updated by:', data.username);\n      if (data.username !== storedUsername) {\n        setCode(data.code);\n      }\n    });\n\n    // Handle language updates\n    socketRef.current.on('language_updated', data => {\n      console.log('Language updated by:', data.username);\n      if (data.username !== storedUsername) {\n        setSelectedLanguage(data.language);\n      }\n    });\n\n    // Handle chat messages\n    socketRef.current.on('new_message', data => {\n      console.log('New message:', data);\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Handle user join/leave\n    socketRef.current.on('user_joined', data => {\n      console.log('User joined:', data.username);\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} joined the room`\n      }]);\n      setParticipants(prev => {\n        // Only add participant if they're not already in the list\n        if (!prev.includes(data.username)) {\n          return [...prev, data.username];\n        }\n        return prev;\n      });\n      if (isVoiceEnabled && localStreamRef.current) {\n        initializePeerConnection(data.username);\n      }\n    });\n    socketRef.current.on('user_left', data => {\n      console.log('User left:', data.username);\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} left the room`\n      }]);\n      setParticipants(prev => prev.filter(user => user !== data.username));\n      cleanupPeerConnection(data.username);\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.emit('leave', {\n          room: roomId,\n          username: storedUsername\n        });\n        socketRef.current.disconnect();\n      }\n      cleanupAllPeerConnections();\n    };\n  }, [roomId, navigate, cleanupAllPeerConnections, initializePeerConnection, isVoiceEnabled]);\n\n  // Effect for handling voice connections when isVoiceEnabled changes\n  useEffect(() => {\n    if (isVoiceEnabled && participants.length > 0 && isSocketConnected) {\n      console.log('Setting up voice connections with participants:', participants);\n      participants.forEach(participant => {\n        if (participant !== username) {\n          initializePeerConnection(participant);\n        }\n      });\n    }\n  }, [isVoiceEnabled, participants, username, isSocketConnected, initializePeerConnection]);\n\n  // Effect to update code template when language changes\n  useEffect(() => {\n    // Update the code template only in these cases:\n    // 1. Initial component mount (code is empty)\n    // 2. When user changes language and code is empty\n    // 3. When code is exactly the template of the previous language\n    const previousTemplate = Object.entries(CODE_TEMPLATES).find(([lang, template]) => lang !== selectedLanguage && code === template);\n    if (!code || code === '' || previousTemplate) {\n      console.log(`Setting template for ${selectedLanguage}`);\n      setCode(CODE_TEMPLATES[selectedLanguage]);\n    }\n  }, [selectedLanguage]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Toggle voice chat\n  const toggleVoiceChat = async () => {\n    if (!isVoiceEnabled) {\n      await initializeWebRTC();\n    } else {\n      cleanupAllPeerConnections();\n      setIsVoiceEnabled(false);\n      setIsConnected(false);\n      setIsMuted(true);\n    }\n  };\n\n  // Toggle mute\n  const toggleMute = () => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const handleCodeChange = value => {\n    setCode(value);\n    if (socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('code_change', {\n        room: roomId,\n        code: value,\n        username: username\n      });\n    }\n  };\n  const handleLanguageChange = e => {\n    const newLanguage = e.target.value;\n    setSelectedLanguage(newLanguage);\n    if (socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('language_change', {\n        room: roomId,\n        language: newLanguage,\n        username: username\n      });\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('chat_message', {\n        room: roomId,\n        message: message.trim(),\n        username: username\n      });\n      setMessage('');\n    }\n  };\n  const executeCode = async () => {\n    setIsExecuting(true);\n    setOutput('');\n    setError('');\n    try {\n      const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n        language: selectedLanguage,\n        version: LANGUAGE_VERSIONS[selectedLanguage],\n        files: [{\n          content: code\n        }]\n      });\n      if (response.data.run) {\n        setOutput(response.data.run.output);\n        if (response.data.run.stderr) {\n          setError(response.data.run.stderr);\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to execute code');\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-mono font-bold text-emerald-400\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLanguage,\n            onChange: handleLanguageChange,\n            className: \"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\",\n            children: LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.value,\n              children: lang.label\n            }, lang.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `ml-4 px-2 py-1 rounded-full ${isSocketConnected ? 'bg-emerald-500' : 'bg-red-500'} text-xs`,\n            children: isSocketConnected ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCode,\n          disabled: isExecuting,\n          className: \"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\",\n          children: isExecuting ? 'Executing...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\",\n          language: LANGUAGE_MAPPING[selectedLanguage],\n          value: code,\n          onChange: handleCodeChange,\n          onMount: handleEditorDidMount,\n          theme: \"vs-dark\",\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14,\n            wordWrap: 'on',\n            automaticLayout: true,\n            fontFamily: 'Fira Code, monospace'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-mono font-bold text-emerald-400 mb-2\",\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\",\n          children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-400\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 36\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-400\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 flex flex-col border-l border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-2 h-2 rounded-full ${isConnected ? 'bg-emerald-500' : 'bg-red-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-mono font-bold text-emerald-400\",\n              children: \"Voice Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleVoiceChat,\n              className: `px-4 py-2 rounded-lg font-bold ${isVoiceEnabled ? 'bg-emerald-500 hover:bg-emerald-600' : 'bg-gray-600 hover:bg-gray-700'} text-white transition-colors`,\n              children: isVoiceEnabled ? 'Disable Voice' : 'Enable Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 29\n            }, this), isVoiceEnabled && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleMute,\n              className: `px-4 py-2 rounded-lg font-bold ${isMuted ? 'bg-red-500 hover:bg-red-600' : 'bg-emerald-500 hover:bg-emerald-600'} text-white transition-colors`,\n              children: isMuted ? 'Unmute' : 'Mute'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-mono font-bold text-emerald-400 mb-2\",\n            children: [\"Participants (\", participants.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-900 rounded-lg p-2 max-h-24 overflow-y-auto\",\n            children: participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-1 px-2 rounded mb-1 bg-gray-800 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-mono\",\n                children: participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 37\n              }, this), participant === username && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs bg-emerald-500 px-2 py-0.5 rounded\",\n                children: \"You\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 66\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-mono font-bold text-emerald-400 mb-2\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-2 rounded-lg ${msg.username === 'System' ? 'bg-gray-800/50' : 'bg-gray-800/90'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-bold ${msg.username === 'System' ? 'text-gray-400' : 'text-emerald-400'}`,\n              children: [msg.username, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"7eRR0DjWfJBft7gzbFIP4AMgVH0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useNavigate","io","Editor","axios","LANGUAGE_VERSIONS","jsxDEV","_jsxDEV","LANGUAGES","value","label","LANGUAGE_MAPPING","CODE_TEMPLATES","rtcConfiguration","iceServers","urls","username","credential","Room","_s","roomId","navigate","setUsername","code","setCode","selectedLanguage","setSelectedLanguage","messages","setMessages","message","setMessage","isMuted","setIsMuted","output","setOutput","error","setError","isExecuting","setIsExecuting","participants","setParticipants","isConnected","setIsConnected","isVoiceEnabled","setIsVoiceEnabled","isSocketConnected","setIsSocketConnected","socketRef","localStreamRef","peerConnectionsRef","messagesEndRef","editorRef","handleEditorDidMount","editor","current","cleanupPeerConnection","peerUsername","console","log","close","audioEl","document","getElementById","remove","cleanupAllPeerConnections","Object","keys","forEach","getTracks","track","stop","querySelectorAll","el","createPeerConnection","targetUsername","pc","RTCPeerConnection","onconnectionstatechange","connectionState","setTimeout","connected","createAndSendOffer","oniceconnectionstatechange","iceConnectionState","restartIce","addTrack","onicecandidate","event","candidate","emit","room","from","to","ontrack","streams","createElement","srcObject","id","autoplay","controls","body","appendChild","offer","createOffer","setLocalDescription","initializePeerConnection","setupWebRTCEventHandlers","off","on","data","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","initializeWebRTC","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","alert","storedUsername","localStorage","getItem","withCredentials","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","Infinity","language","prev","includes","filter","user","disconnect","length","participant","previousTemplate","entries","find","lang","template","_messagesEndRef$curre","scrollIntoView","behavior","toggleVoiceChat","toggleMute","getAudioTracks","enabled","handleCodeChange","handleLanguageChange","e","newLanguage","target","handleSendMessage","preventDefault","trim","executeCode","response","post","version","files","content","run","stderr","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","onClick","disabled","height","onMount","theme","options","minimap","fontSize","wordWrap","automaticLayout","fontFamily","index","msg","ref","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\n\nconst LANGUAGES = [\n    { value: 'python', label: 'Python' },\n    { value: 'javascript', label: 'JavaScript' },\n    { value: 'java', label: 'Java' },\n    { value: 'cpp', label: 'C++' },\n    { value: 'csharp', label: 'C#' },\n    { value: 'typescript', label: 'TypeScript' },\n    { value: 'go', label: 'Go' },\n    { value: 'rust', label: 'Rust' }\n];\n\n// Map language values to Monaco editor language ids\nconst LANGUAGE_MAPPING = {\n    'python': 'python',\n    'javascript': 'javascript',\n    'java': 'java',\n    'cpp': 'cpp',\n    'csharp': 'csharp',\n    'typescript': 'typescript',\n    'go': 'go',\n    'rust': 'rust'\n};\n\n// Initial code templates for each language\nconst CODE_TEMPLATES = {\n    'python': '# Welcome to Python\\n\\ndef greeting(name):\\n    return f\"Hello, {name}!\"\\n\\n# Main program\\nif __name__ == \"__main__\":\\n    print(greeting(\"World\"))\\n    # Add your code here',\n    \n    'javascript': '// Welcome to JavaScript\\n\\nfunction greeting(name) {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n    \n    'java': '// Welcome to Java\\n\\npublic class Main {\\n    public static String greeting(String name) {\\n        return \"Hello, \" + name + \"!\";\\n    }\\n    \\n    public static void main(String[] args) {\\n        System.out.println(greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n    \n    'cpp': '// Welcome to C++\\n#include <iostream>\\n#include <string>\\n\\nstd::string greeting(const std::string& name) {\\n    return \"Hello, \" + name + \"!\";\\n}\\n\\nint main() {\\n    std::cout << greeting(\"World\") << std::endl;\\n    // Add your code here\\n    return 0;\\n}',\n    \n    'csharp': '// Welcome to C#\\nusing System;\\n\\nclass Program {\\n    static string Greeting(string name) {\\n        return $\"Hello, {name}!\";\\n    }\\n    \\n    static void Main() {\\n        Console.WriteLine(Greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n    \n    'typescript': '// Welcome to TypeScript\\n\\nfunction greeting(name: string): string {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n    \n    'go': '// Welcome to Go\\npackage main\\n\\nimport (\\n    \"fmt\"\\n)\\n\\nfunc greeting(name string) string {\\n    return fmt.Sprintf(\"Hello, %s!\", name)\\n}\\n\\nfunc main() {\\n    fmt.Println(greeting(\"World\"))\\n    // Add your code here\\n}',\n    \n    'rust': '// Welcome to Rust\\n\\nfn greeting(name: &str) -> String {\\n    format!(\"Hello, {}!\", name)\\n}\\n\\nfn main() {\\n    println!(\"{}\", greeting(\"World\"));\\n    // Add your code here\\n}'\n};\n\n// WebRTC Configuration\nconst rtcConfiguration = {\n    iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' },\n        { urls: 'stun:stun2.l.google.com:19302' },\n        {\n            urls: 'turn:openrelay.metered.ca:80',\n            username: 'openrelayproject',\n            credential: 'openrelayproject'\n        },\n        {\n            urls: 'turn:openrelay.metered.ca:443',\n            username: 'openrelayproject',\n            credential: 'openrelayproject'\n        }\n    ]\n};\n\nconst Room = () => {\n    const { roomId } = useParams();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [code, setCode] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('python');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [isMuted, setIsMuted] = useState(true);\n    const [output, setOutput] = useState('');\n    const [error, setError] = useState('');\n    const [isExecuting, setIsExecuting] = useState(false);\n    const [participants, setParticipants] = useState([]);\n    const [isConnected, setIsConnected] = useState(false);\n    const [isVoiceEnabled, setIsVoiceEnabled] = useState(false);\n    const [isSocketConnected, setIsSocketConnected] = useState(false);\n    \n    const socketRef = useRef();\n    const localStreamRef = useRef();\n    const peerConnectionsRef = useRef({});\n    const messagesEndRef = useRef();\n    const editorRef = useRef(null);\n    \n    // Function to handle editor mounting\n    const handleEditorDidMount = (editor) => {\n        editorRef.current = editor;\n    };\n    \n    // Clean up peer connection\n    const cleanupPeerConnection = (peerUsername) => {\n        if (peerConnectionsRef.current[peerUsername]) {\n            console.log(`Cleaning up peer connection with ${peerUsername}`);\n            peerConnectionsRef.current[peerUsername].close();\n            delete peerConnectionsRef.current[peerUsername];\n        }\n        \n        // Remove audio element\n        const audioEl = document.getElementById(`audio-${peerUsername}`);\n        if (audioEl) {\n            audioEl.remove();\n        }\n    };\n\n    // Clean up all peer connections\n    const cleanupAllPeerConnections = useCallback(() => {\n        console.log(\"Cleaning up all peer connections\");\n        Object.keys(peerConnectionsRef.current).forEach(cleanupPeerConnection);\n        \n        // Stop local media stream\n        if (localStreamRef.current) {\n            localStreamRef.current.getTracks().forEach(track => {\n                track.stop();\n            });\n            localStreamRef.current = null;\n        }\n        \n        // Remove all audio elements\n        document.querySelectorAll('audio[id^=\"audio-\"]').forEach(el => el.remove());\n    }, []);\n    \n    // Create a new peer connection\n    const createPeerConnection = useCallback((targetUsername) => {\n        if (targetUsername === username) return null;\n        console.log(`Creating peer connection with ${targetUsername}`);\n\n        // Close existing connection if it exists\n        if (peerConnectionsRef.current[targetUsername]) {\n            peerConnectionsRef.current[targetUsername].close();\n        }\n\n        const pc = new RTCPeerConnection(rtcConfiguration);\n        peerConnectionsRef.current[targetUsername] = pc;\n\n        // Log connection state changes\n        pc.onconnectionstatechange = () => {\n            console.log(`Connection state with ${targetUsername}: ${pc.connectionState}`);\n            if (pc.connectionState === 'connected') {\n                console.log(`Successfully connected to ${targetUsername}`);\n            } else if (pc.connectionState === 'failed' || pc.connectionState === 'disconnected' || pc.connectionState === 'closed') {\n                console.log(`Connection with ${targetUsername} is ${pc.connectionState}`);\n                if (pc.connectionState === 'failed') {\n                    // Attempt to reconnect\n                    setTimeout(() => {\n                        if (isVoiceEnabled && localStreamRef.current) {\n                            cleanupPeerConnection(targetUsername);\n                            // Use the functional version to avoid stale references\n                            if (socketRef.current && socketRef.current.connected) {\n                                createAndSendOffer(targetUsername);\n                            }\n                        }\n                    }, 2000);\n                }\n            }\n        };\n\n        pc.oniceconnectionstatechange = () => {\n            console.log(`ICE connection state with ${targetUsername}: ${pc.iceConnectionState}`);\n            if (pc.iceConnectionState === 'failed') {\n                // Try to restart ICE\n                pc.restartIce();\n            }\n        };\n\n        // Add local stream to the connection\n        if (localStreamRef.current) {\n            localStreamRef.current.getTracks().forEach(track => {\n                console.log(`Adding track to peer connection with ${targetUsername}`, track);\n                pc.addTrack(track, localStreamRef.current);\n            });\n        } else {\n            console.error(\"Local stream not available when creating peer connection\");\n            return null;\n        }\n\n        // Handle ICE candidates\n        pc.onicecandidate = (event) => {\n            if (event.candidate) {\n                console.log(`Sending ICE candidate to ${targetUsername}`, event.candidate);\n                socketRef.current.emit('webrtc_ice', {\n                    room: roomId,\n                    candidate: event.candidate,\n                    from: username,\n                    to: targetUsername\n                });\n            }\n        };\n\n        // Handle incoming audio stream\n        pc.ontrack = (event) => {\n            console.log(`Received track from ${targetUsername}`, event.streams[0]);\n            const audioEl = document.createElement('audio');\n            audioEl.srcObject = event.streams[0];\n            audioEl.id = `audio-${targetUsername}`;\n            audioEl.autoplay = true;\n            audioEl.controls = false;\n            document.body.appendChild(audioEl);\n        };\n\n        return pc;\n    }, [roomId, username, isVoiceEnabled]);\n    \n    // Helper function to create and send offer\n    const createAndSendOffer = useCallback(async (targetUsername) => {\n        const pc = createPeerConnection(targetUsername);\n        if (!pc) return;\n\n        try {\n            const offer = await pc.createOffer();\n            await pc.setLocalDescription(offer);\n\n            console.log(`Sending offer to ${targetUsername}`, offer);\n            socketRef.current.emit('webrtc_offer', {\n                room: roomId,\n                offer: offer,\n                from: username,\n                to: targetUsername\n            });\n        } catch (error) {\n            console.error('Error creating offer:', error);\n        }\n    }, [roomId, username, createPeerConnection]);\n\n    // Initialize peer connection and send offer\n    const initializePeerConnection = useCallback((targetUsername) => {\n        createAndSendOffer(targetUsername);\n    }, [createAndSendOffer]);\n    \n    // Set up WebRTC event handlers\n    const setupWebRTCEventHandlers = () => {\n        // Clear existing handlers to prevent duplicates\n        socketRef.current.off('webrtc_offer');\n        socketRef.current.off('webrtc_answer');\n        socketRef.current.off('webrtc_ice');\n        \n        // Handle incoming offer\n        socketRef.current.on('webrtc_offer', async (data) => {\n            if (data.from === username || (data.to && data.to !== username)) return;\n            \n            console.log(`Received offer from ${data.from}`, data.offer);\n            \n            const pc = createPeerConnection(data.from);\n            if (!pc) return;\n\n            try {\n                await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n                const answer = await pc.createAnswer();\n                await pc.setLocalDescription(answer);\n\n                console.log(`Sending answer to ${data.from}`, answer);\n                socketRef.current.emit('webrtc_answer', {\n                    room: roomId,\n                    answer: answer,\n                    from: username,\n                    to: data.from\n                });\n            } catch (error) {\n                console.error('Error handling offer:', error);\n            }\n        });\n\n        // Handle incoming answer\n        socketRef.current.on('webrtc_answer', async (data) => {\n            if (data.from === username || (data.to && data.to !== username)) return;\n            \n            console.log(`Received answer from ${data.from}`, data.answer);\n            \n            const pc = peerConnectionsRef.current[data.from];\n            if (pc) {\n                try {\n                    await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n                    console.log(`Successfully set remote description for ${data.from}`);\n                } catch (error) {\n                    console.error('Error handling answer:', error);\n                }\n            }\n        });\n\n        // Handle ICE candidates\n        socketRef.current.on('webrtc_ice', async (data) => {\n            if (data.from === username || (data.to && data.to !== username)) return;\n            \n            console.log(`Received ICE candidate from ${data.from}`, data.candidate);\n            \n            const pc = peerConnectionsRef.current[data.from];\n            if (pc) {\n                try {\n                    await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n                    console.log(`Successfully added ICE candidate for ${data.from}`);\n                } catch (error) {\n                    console.error('Error handling ICE candidate:', error);\n                }\n            }\n        });\n    };\n    \n    // Initialize WebRTC\n    const initializeWebRTC = async () => {\n        try {\n            console.log(\"Initializing WebRTC...\");\n            // Get user media\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    autoGainControl: true\n                }\n            });\n            \n            console.log(\"User media acquired successfully\");\n            localStreamRef.current = stream;\n            setIsVoiceEnabled(true);\n            setIsConnected(true);\n            setIsMuted(false); // Start unmuted by default\n\n            // Set up WebRTC event handlers\n            setupWebRTCEventHandlers();\n            \n            console.log(\"WebRTC initialized successfully\");\n        } catch (error) {\n            console.error('Error initializing WebRTC:', error);\n            alert(\"Error accessing microphone. Please make sure your microphone is connected and you've granted permission.\");\n            setIsVoiceEnabled(false);\n            setIsConnected(false);\n        }\n    };\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem('username');\n        if (!storedUsername) {\n            navigate('/');\n            return;\n        }\n        setUsername(storedUsername);\n\n        // Initialize socket connection\n        socketRef.current = io('http://localhost:5001', {\n            withCredentials: true,\n            reconnection: true,\n            reconnectionDelay: 1000,\n            reconnectionDelayMax: 5000,\n            reconnectionAttempts: Infinity\n        });\n\n        // Socket connection events\n        socketRef.current.on('connect', () => {\n            console.log('Socket connected');\n            setIsSocketConnected(true);\n            \n            // Join room upon connection\n            socketRef.current.emit('join', { room: roomId, username: storedUsername });\n        });\n\n        socketRef.current.on('disconnect', () => {\n            console.log('Socket disconnected');\n            setIsSocketConnected(false);\n        });\n\n        socketRef.current.on('connect_error', (error) => {\n            console.error('Socket connection error:', error);\n            setIsSocketConnected(false);\n        });\n\n        // Handle initial state\n        socketRef.current.on('initial_state', (data) => {\n            console.log('Received initial state:', data);\n            if (data.code) setCode(data.code);\n            if (data.language) setSelectedLanguage(data.language);\n            if (data.participants) setParticipants(data.participants);\n        });\n\n        // Handle code updates\n        socketRef.current.on('code_updated', (data) => {\n            console.log('Code updated by:', data.username);\n            if (data.username !== storedUsername) {\n                setCode(data.code);\n            }\n        });\n\n        // Handle language updates\n        socketRef.current.on('language_updated', (data) => {\n            console.log('Language updated by:', data.username);\n            if (data.username !== storedUsername) {\n                setSelectedLanguage(data.language);\n            }\n        });\n\n        // Handle chat messages\n        socketRef.current.on('new_message', (data) => {\n            console.log('New message:', data);\n            setMessages(prev => [...prev, data]);\n        });\n\n        // Handle user join/leave\n        socketRef.current.on('user_joined', (data) => {\n            console.log('User joined:', data.username);\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} joined the room` }]);\n            setParticipants(prev => {\n                // Only add participant if they're not already in the list\n                if (!prev.includes(data.username)) {\n                    return [...prev, data.username];\n                }\n                return prev;\n            });\n            \n            if (isVoiceEnabled && localStreamRef.current) {\n                initializePeerConnection(data.username);\n            }\n        });\n\n        socketRef.current.on('user_left', (data) => {\n            console.log('User left:', data.username);\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} left the room` }]);\n            setParticipants(prev => prev.filter(user => user !== data.username));\n            cleanupPeerConnection(data.username);\n        });\n\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.emit('leave', { room: roomId, username: storedUsername });\n                socketRef.current.disconnect();\n            }\n            cleanupAllPeerConnections();\n        };\n    }, [roomId, navigate, cleanupAllPeerConnections, initializePeerConnection, isVoiceEnabled]);\n\n    // Effect for handling voice connections when isVoiceEnabled changes\n    useEffect(() => {\n        if (isVoiceEnabled && participants.length > 0 && isSocketConnected) {\n            console.log('Setting up voice connections with participants:', participants);\n            participants.forEach(participant => {\n                if (participant !== username) {\n                    initializePeerConnection(participant);\n                }\n            });\n        }\n    }, [isVoiceEnabled, participants, username, isSocketConnected, initializePeerConnection]);\n\n    // Effect to update code template when language changes\n    useEffect(() => {\n        // Update the code template only in these cases:\n        // 1. Initial component mount (code is empty)\n        // 2. When user changes language and code is empty\n        // 3. When code is exactly the template of the previous language\n        const previousTemplate = Object.entries(CODE_TEMPLATES).find(([lang, template]) => \n            lang !== selectedLanguage && code === template\n        );\n        \n        if (!code || code === '' || previousTemplate) {\n            console.log(`Setting template for ${selectedLanguage}`);\n            setCode(CODE_TEMPLATES[selectedLanguage]);\n        }\n    }, [selectedLanguage]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    // Toggle voice chat\n    const toggleVoiceChat = async () => {\n        if (!isVoiceEnabled) {\n            await initializeWebRTC();\n        } else {\n            cleanupAllPeerConnections();\n            setIsVoiceEnabled(false);\n            setIsConnected(false);\n            setIsMuted(true);\n        }\n    };\n\n    // Toggle mute\n    const toggleMute = () => {\n        if (localStreamRef.current) {\n            localStreamRef.current.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n            });\n            setIsMuted(!isMuted);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        if (socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('code_change', {\n                room: roomId,\n                code: value,\n                username: username\n            });\n        }\n    };\n\n    const handleLanguageChange = (e) => {\n        const newLanguage = e.target.value;\n        setSelectedLanguage(newLanguage);\n        if (socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('language_change', {\n                room: roomId,\n                language: newLanguage,\n                username: username\n            });\n        }\n    };\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        if (message.trim() && socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('chat_message', {\n                room: roomId,\n                message: message.trim(),\n                username: username\n            });\n            setMessage('');\n        }\n    };\n\n    const executeCode = async () => {\n        setIsExecuting(true);\n        setOutput('');\n        setError('');\n        \n        try {\n            const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n                language: selectedLanguage,\n                version: LANGUAGE_VERSIONS[selectedLanguage],\n                files: [\n                    {\n                        content: code\n                    }\n                ]\n            });\n            \n            if (response.data.run) {\n                setOutput(response.data.run.output);\n                if (response.data.run.stderr) {\n                    setError(response.data.run.stderr);\n                }\n            }\n        } catch (err) {\n            setError(err.response?.data?.error || 'Failed to execute code');\n        } finally {\n            setIsExecuting(false);\n        }\n    };\n\n    return (\n        <div className=\"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\">\n            {/* Left Panel - Code Editor */}\n            <div className=\"w-2/3 flex flex-col\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\">\n                    <div className=\"flex items-center space-x-4\">\n                        <span className=\"text-lg font-mono font-bold text-emerald-400\">Room: {roomId}</span>\n                        <select\n                            value={selectedLanguage}\n                            onChange={handleLanguageChange}\n                            className=\"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        >\n                            {LANGUAGES.map(lang => (\n                                <option key={lang.value} value={lang.value}>\n                                    {lang.label}\n                                </option>\n                            ))}\n                        </select>\n                        <div className={`ml-4 px-2 py-1 rounded-full ${isSocketConnected ? 'bg-emerald-500' : 'bg-red-500'} text-xs`}>\n                            {isSocketConnected ? 'Connected' : 'Disconnected'}\n                        </div>\n                    </div>\n                    <button\n                        onClick={executeCode}\n                        disabled={isExecuting}\n                        className=\"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\"\n                    >\n                        {isExecuting ? 'Executing...' : 'Run Code'}\n                    </button>\n                </div>\n                <div className=\"flex-1\">\n                    <Editor\n                        height=\"100%\"\n                        language={LANGUAGE_MAPPING[selectedLanguage]}\n                        value={code}\n                        onChange={handleCodeChange}\n                        onMount={handleEditorDidMount}\n                        theme=\"vs-dark\"\n                        options={{\n                            minimap: { enabled: false },\n                            fontSize: 14,\n                            wordWrap: 'on',\n                            automaticLayout: true,\n                            fontFamily: 'Fira Code, monospace'\n                        }}\n                    />\n                </div>\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <h3 className=\"text-lg font-mono font-bold text-emerald-400 mb-2\">Output</h3>\n                    <div className=\"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\">\n                        {output && <div className=\"text-green-400\">{output}</div>}\n                        {error && <div className=\"text-red-400\">{error}</div>}\n                    </div>\n                </div>\n            </div>\n\n            {/* Right Panel - Chat and Voice */}\n            <div className=\"w-1/3 flex flex-col border-l border-gray-700\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl\">\n                    <div className=\"flex justify-between items-center mb-4\">\n                        <div className=\"flex items-center space-x-2\">\n                            <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-emerald-500' : 'bg-red-500'}`}></div>\n                            <span className=\"font-mono font-bold text-emerald-400\">Voice Status</span>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                            <button\n                                onClick={toggleVoiceChat}\n                                className={`px-4 py-2 rounded-lg font-bold ${\n                                    isVoiceEnabled ? 'bg-emerald-500 hover:bg-emerald-600' : 'bg-gray-600 hover:bg-gray-700'\n                                } text-white transition-colors`}\n                            >\n                                {isVoiceEnabled ? 'Disable Voice' : 'Enable Voice'}\n                            </button>\n                            {isVoiceEnabled && (\n                                <button\n                                    onClick={toggleMute}\n                                    className={`px-4 py-2 rounded-lg font-bold ${\n                                        isMuted ? 'bg-red-500 hover:bg-red-600' : 'bg-emerald-500 hover:bg-emerald-600'\n                                    } text-white transition-colors`}\n                                >\n                                    {isMuted ? 'Unmute' : 'Mute'}\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                    \n                    <div className=\"mt-4\">\n                        <h3 className=\"font-mono font-bold text-emerald-400 mb-2\">Participants ({participants.length})</h3>\n                        <div className=\"bg-gray-900 rounded-lg p-2 max-h-24 overflow-y-auto\">\n                            {participants.map((participant, index) => (\n                                <div key={index} className=\"py-1 px-2 rounded mb-1 bg-gray-800 flex items-center\">\n                                    <span className=\"font-mono\">{participant}</span>\n                                    {participant === username && <span className=\"ml-2 text-xs bg-emerald-500 px-2 py-0.5 rounded\">You</span>}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\">\n                    <h3 className=\"font-mono font-bold text-emerald-400 mb-2\">Chat</h3>\n                    <div className=\"space-y-2\">\n                        {messages.map((msg, index) => (\n                            <div key={index} className={`p-2 rounded-lg ${msg.username === 'System' ? 'bg-gray-800/50' : 'bg-gray-800/90'}`}>\n                                <span className={`font-bold ${msg.username === 'System' ? 'text-gray-400' : 'text-emerald-400'}`}>{msg.username}: </span>\n                                <span>{msg.message}</span>\n                            </div>\n                        ))}\n                        <div ref={messagesEndRef} />\n                    </div>\n                </div>\n                \n                <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <div className=\"flex\">\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                            className=\"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Room; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}