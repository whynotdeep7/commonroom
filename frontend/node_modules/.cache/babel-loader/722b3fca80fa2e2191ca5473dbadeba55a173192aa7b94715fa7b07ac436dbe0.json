{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  value: 'python',\n  label: 'Python'\n}, {\n  value: 'javascript',\n  label: 'JavaScript'\n}, {\n  value: 'java',\n  label: 'Java'\n}, {\n  value: 'cpp',\n  label: 'C++'\n}, {\n  value: 'csharp',\n  label: 'C#'\n}, {\n  value: 'typescript',\n  label: 'TypeScript'\n}, {\n  value: 'go',\n  label: 'Go'\n}, {\n  value: 'rust',\n  label: 'Rust'\n}];\n\n// Map language values to Monaco editor language ids\nconst LANGUAGE_MAPPING = {\n  'python': 'python',\n  'javascript': 'javascript',\n  'java': 'java',\n  'cpp': 'cpp',\n  'csharp': 'csharp',\n  'typescript': 'typescript',\n  'go': 'go',\n  'rust': 'rust'\n};\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [code, setCode] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('python');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [isMuted, setIsMuted] = useState(true);\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isVoiceEnabled, setIsVoiceEnabled] = useState(false);\n  const socketRef = useRef();\n  const localStreamRef = useRef();\n  const peerConnectionsRef = useRef({});\n  const messagesEndRef = useRef();\n  const socketEventsSetupRef = useRef(false);\n\n  // WebRTC Configuration\n  const configuration = {\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }, {\n      urls: 'stun:stun1.l.google.com:19302'\n    }, {\n      urls: 'stun:stun2.l.google.com:19302'\n    }, {\n      urls: 'turn:openrelay.metered.ca:80',\n      username: 'openrelayproject',\n      credential: 'openrelayproject'\n    }, {\n      urls: 'turn:openrelay.metered.ca:443',\n      username: 'openrelayproject',\n      credential: 'openrelayproject'\n    }]\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (!storedUsername) {\n      navigate('/');\n      return;\n    }\n    setUsername(storedUsername);\n\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true\n    });\n\n    // Set up socket event handlers (only once)\n    if (!socketEventsSetupRef.current) {\n      // Handle code updates\n      socketRef.current.on('code_updated', data => {\n        if (data.username !== storedUsername) {\n          setCode(data.code);\n        }\n      });\n\n      // Handle language updates\n      socketRef.current.on('language_updated', data => {\n        if (data.username !== storedUsername) {\n          setSelectedLanguage(data.language);\n        }\n      });\n\n      // Handle chat messages\n      socketRef.current.on('new_message', data => {\n        setMessages(prev => [...prev, data]);\n      });\n\n      // Handle user join/leave\n      socketRef.current.on('user_joined', data => {\n        setMessages(prev => [...prev, {\n          username: 'System',\n          message: `${data.username} joined the room`\n        }]);\n        setParticipants(prev => {\n          // Only add participant if they're not already in the list\n          if (!prev.includes(data.username)) {\n            return [...prev, data.username];\n          }\n          return prev;\n        });\n        if (isVoiceEnabled && localStreamRef.current) {\n          initializePeerConnection(data.username);\n        }\n      });\n      socketRef.current.on('user_left', data => {\n        setMessages(prev => [...prev, {\n          username: 'System',\n          message: `${data.username} left the room`\n        }]);\n        setParticipants(prev => prev.filter(user => user !== data.username));\n        cleanupPeerConnection(data.username);\n      });\n      socketEventsSetupRef.current = true;\n    }\n\n    // Join room\n    socketRef.current.emit('join', {\n      room: roomId,\n      username: storedUsername\n    });\n    return () => {\n      socketRef.current.emit('leave', {\n        room: roomId,\n        username: storedUsername\n      });\n      socketRef.current.disconnect();\n      cleanupAllPeerConnections();\n    };\n  }, [roomId, navigate]);\n\n  // Effect for handling voice connections when isVoiceEnabled changes\n  useEffect(() => {\n    if (isVoiceEnabled && participants.length > 0) {\n      participants.forEach(participant => {\n        if (participant !== username) {\n          initializePeerConnection(participant);\n        }\n      });\n    }\n  }, [isVoiceEnabled, participants, username]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Initialize WebRTC\n  const initializeWebRTC = async () => {\n    try {\n      console.log(\"Initializing WebRTC...\");\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      console.log(\"User media acquired successfully\");\n      localStreamRef.current = stream;\n      setIsVoiceEnabled(true);\n      setIsConnected(true);\n      setIsMuted(false); // Start unmuted by default\n\n      // Set up WebRTC event handlers\n      setupWebRTCEventHandlers();\n      console.log(\"WebRTC initialized successfully\");\n    } catch (error) {\n      console.error('Error initializing WebRTC:', error);\n      alert(\"Error accessing microphone. Please make sure your microphone is connected and you've granted permission.\");\n      setIsVoiceEnabled(false);\n      setIsConnected(false);\n    }\n  };\n\n  // Create a new peer connection\n  const createPeerConnection = targetUsername => {\n    if (targetUsername === username) return null;\n    console.log(`Creating peer connection with ${targetUsername}`);\n\n    // Close existing connection if it exists\n    if (peerConnectionsRef.current[targetUsername]) {\n      peerConnectionsRef.current[targetUsername].close();\n    }\n    const pc = new RTCPeerConnection(configuration);\n    peerConnectionsRef.current[targetUsername] = pc;\n\n    // Log connection state changes\n    pc.onconnectionstatechange = () => {\n      console.log(`Connection state with ${targetUsername}: ${pc.connectionState}`);\n    };\n    pc.oniceconnectionstatechange = () => {\n      console.log(`ICE connection state with ${targetUsername}: ${pc.iceConnectionState}`);\n    };\n\n    // Add local stream to the connection\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        console.log(`Adding track to peer connection with ${targetUsername}`, track);\n        pc.addTrack(track, localStreamRef.current);\n      });\n    } else {\n      console.error(\"Local stream not available when creating peer connection\");\n      return null;\n    }\n\n    // Handle ICE candidates\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        console.log(`Sending ICE candidate to ${targetUsername}`, event.candidate);\n        socketRef.current.emit('webrtc_ice', {\n          room: roomId,\n          candidate: event.candidate,\n          from: username,\n          to: targetUsername\n        });\n      }\n    };\n\n    // Handle incoming audio stream\n    pc.ontrack = event => {\n      console.log(`Received track from ${targetUsername}`, event.streams[0]);\n      const audioEl = document.createElement('audio');\n      audioEl.srcObject = event.streams[0];\n      audioEl.id = `audio-${targetUsername}`;\n      audioEl.autoplay = true;\n      audioEl.controls = false;\n      document.body.appendChild(audioEl);\n    };\n    return pc;\n  };\n\n  // Set up WebRTC event handlers\n  const setupWebRTCEventHandlers = () => {\n    // Handle incoming offer\n    socketRef.current.on('webrtc_offer', async data => {\n      if (data.from === username) return;\n      console.log(`Received offer from ${data.from}`, data.offer);\n      const pc = createPeerConnection(data.from);\n      if (!pc) return;\n      try {\n        await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        console.log(`Sending answer to ${data.from}`, answer);\n        socketRef.current.emit('webrtc_answer', {\n          room: roomId,\n          answer: answer,\n          from: username,\n          to: data.from\n        });\n      } catch (error) {\n        console.error('Error handling offer:', error);\n      }\n    });\n\n    // Handle incoming answer\n    socketRef.current.on('webrtc_answer', async data => {\n      if (data.from === username) return;\n      console.log(`Received answer from ${data.from}`, data.answer);\n      const pc = peerConnectionsRef.current[data.from];\n      if (pc) {\n        try {\n          await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n          console.log(`Successfully set remote description for ${data.from}`);\n        } catch (error) {\n          console.error('Error handling answer:', error);\n        }\n      }\n    });\n\n    // Handle ICE candidates\n    socketRef.current.on('webrtc_ice', async data => {\n      if (data.from === username) return;\n      console.log(`Received ICE candidate from ${data.from}`, data.candidate);\n      const pc = peerConnectionsRef.current[data.from];\n      if (pc) {\n        try {\n          await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n          console.log(`Successfully added ICE candidate for ${data.from}`);\n        } catch (error) {\n          console.error('Error handling ICE candidate:', error);\n        }\n      }\n    });\n  };\n\n  // Initialize peer connection and send offer\n  const initializePeerConnection = async targetUsername => {\n    if (targetUsername === username) return;\n    console.log(`Initializing peer connection with ${targetUsername}`);\n    const pc = createPeerConnection(targetUsername);\n    if (!pc) return;\n    try {\n      const offer = await pc.createOffer();\n      await pc.setLocalDescription(offer);\n      console.log(`Sending offer to ${targetUsername}`, offer);\n      socketRef.current.emit('webrtc_offer', {\n        room: roomId,\n        offer: offer,\n        from: username,\n        to: targetUsername\n      });\n    } catch (error) {\n      console.error('Error creating offer:', error);\n    }\n  };\n\n  // Clean up peer connection\n  const cleanupPeerConnection = username => {\n    if (peerConnectionsRef.current[username]) {\n      console.log(`Cleaning up peer connection with ${username}`);\n      peerConnectionsRef.current[username].close();\n      delete peerConnectionsRef.current[username];\n    }\n\n    // Remove audio element\n    const audioEl = document.getElementById(`audio-${username}`);\n    if (audioEl) {\n      audioEl.remove();\n    }\n  };\n\n  // Clean up all peer connections\n  const cleanupAllPeerConnections = () => {\n    console.log(\"Cleaning up all peer connections\");\n    Object.keys(peerConnectionsRef.current).forEach(cleanupPeerConnection);\n\n    // Stop local media stream\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        track.stop();\n      });\n      localStreamRef.current = null;\n    }\n\n    // Remove all audio elements\n    document.querySelectorAll('audio[id^=\"audio-\"]').forEach(el => el.remove());\n  };\n\n  // Toggle voice chat\n  const toggleVoiceChat = async () => {\n    if (!isVoiceEnabled) {\n      await initializeWebRTC();\n    } else {\n      cleanupAllPeerConnections();\n      setIsVoiceEnabled(false);\n      setIsConnected(false);\n      setIsMuted(true);\n    }\n  };\n\n  // Toggle mute\n  const toggleMute = () => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const handleCodeChange = value => {\n    setCode(value);\n    socketRef.current.emit('code_change', {\n      room: roomId,\n      code: value,\n      username: username\n    });\n  };\n  const handleLanguageChange = e => {\n    const newLanguage = e.target.value;\n    setSelectedLanguage(newLanguage);\n    socketRef.current.emit('language_change', {\n      room: roomId,\n      language: newLanguage,\n      username: username\n    });\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      socketRef.current.emit('chat_message', {\n        room: roomId,\n        message: message.trim(),\n        username: username\n      });\n      setMessage('');\n    }\n  };\n  const executeCode = async () => {\n    setIsExecuting(true);\n    setOutput('');\n    setError('');\n    try {\n      const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n        language: selectedLanguage,\n        version: LANGUAGE_VERSIONS[selectedLanguage],\n        files: [{\n          content: code\n        }]\n      });\n      if (response.data.run) {\n        setOutput(response.data.run.output);\n        if (response.data.run.stderr) {\n          setError(response.data.run.stderr);\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to execute code');\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-mono font-bold text-emerald-400\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLanguage,\n            onChange: handleLanguageChange,\n            className: \"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\",\n            children: LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.value,\n              children: lang.label\n            }, lang.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: executeCode,\n          disabled: isExecuting,\n          className: \"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\",\n          children: isExecuting ? 'Executing...' : 'Run Code'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\",\n          language: LANGUAGE_MAPPING[selectedLanguage],\n          value: code,\n          onChange: handleCodeChange,\n          theme: \"vs-dark\",\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14,\n            wordWrap: 'on',\n            automaticLayout: true,\n            fontFamily: 'Fira Code, monospace'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-mono font-bold text-emerald-400 mb-2\",\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\",\n          children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-400\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 36\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-400\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 flex flex-col border-l border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-2 h-2 rounded-full ${isConnected ? 'bg-emerald-500' : 'bg-red-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-mono font-bold text-emerald-400\",\n            children: [\"Participants (\", participants.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleVoiceChat,\n            className: `px-4 py-2 rounded-lg font-bold ${isVoiceEnabled ? 'bg-emerald-500 hover:bg-emerald-600' : 'bg-gray-600 hover:bg-gray-700'} text-white transition-colors`,\n            children: isVoiceEnabled ? 'Disable Voice' : 'Enable Voice'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this), isVoiceEnabled && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleMute,\n            className: `px-4 py-2 rounded-lg font-bold ${isMuted ? 'bg-red-500 hover:bg-red-600' : 'bg-emerald-500 hover:bg-emerald-600'} text-white transition-colors`,\n            children: isMuted ? 'Unmute' : 'Mute'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 p-2 rounded-lg bg-gray-800/50 backdrop-blur-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-emerald-400\",\n            children: [msg.username, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"QL9v2R2AUDmjjjLnGgO01hCwkWc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","Editor","axios","LANGUAGE_VERSIONS","jsxDEV","_jsxDEV","LANGUAGES","value","label","LANGUAGE_MAPPING","Room","_s","roomId","navigate","username","setUsername","code","setCode","selectedLanguage","setSelectedLanguage","messages","setMessages","message","setMessage","isMuted","setIsMuted","output","setOutput","error","setError","isExecuting","setIsExecuting","participants","setParticipants","isConnected","setIsConnected","isVoiceEnabled","setIsVoiceEnabled","socketRef","localStreamRef","peerConnectionsRef","messagesEndRef","socketEventsSetupRef","configuration","iceServers","urls","credential","storedUsername","localStorage","getItem","current","withCredentials","on","data","language","prev","includes","initializePeerConnection","filter","user","cleanupPeerConnection","emit","room","disconnect","cleanupAllPeerConnections","length","forEach","participant","_messagesEndRef$curre","scrollIntoView","behavior","initializeWebRTC","console","log","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","setupWebRTCEventHandlers","alert","createPeerConnection","targetUsername","close","pc","RTCPeerConnection","onconnectionstatechange","connectionState","oniceconnectionstatechange","iceConnectionState","getTracks","track","addTrack","onicecandidate","event","candidate","from","to","ontrack","streams","audioEl","document","createElement","srcObject","id","autoplay","controls","body","appendChild","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","createOffer","getElementById","remove","Object","keys","stop","querySelectorAll","el","toggleVoiceChat","toggleMute","getAudioTracks","enabled","handleCodeChange","handleLanguageChange","e","newLanguage","target","handleSendMessage","preventDefault","trim","executeCode","response","post","version","files","content","run","stderr","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","lang","onClick","disabled","height","theme","options","minimap","fontSize","wordWrap","automaticLayout","fontFamily","msg","index","ref","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\n\nconst LANGUAGES = [\n    { value: 'python', label: 'Python' },\n    { value: 'javascript', label: 'JavaScript' },\n    { value: 'java', label: 'Java' },\n    { value: 'cpp', label: 'C++' },\n    { value: 'csharp', label: 'C#' },\n    { value: 'typescript', label: 'TypeScript' },\n    { value: 'go', label: 'Go' },\n    { value: 'rust', label: 'Rust' }\n];\n\n// Map language values to Monaco editor language ids\nconst LANGUAGE_MAPPING = {\n    'python': 'python',\n    'javascript': 'javascript',\n    'java': 'java',\n    'cpp': 'cpp',\n    'csharp': 'csharp',\n    'typescript': 'typescript',\n    'go': 'go',\n    'rust': 'rust'\n};\n\nconst Room = () => {\n    const { roomId } = useParams();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [code, setCode] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('python');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [isMuted, setIsMuted] = useState(true);\n    const [output, setOutput] = useState('');\n    const [error, setError] = useState('');\n    const [isExecuting, setIsExecuting] = useState(false);\n    const [participants, setParticipants] = useState([]);\n    const [isConnected, setIsConnected] = useState(false);\n    const [isVoiceEnabled, setIsVoiceEnabled] = useState(false);\n    \n    const socketRef = useRef();\n    const localStreamRef = useRef();\n    const peerConnectionsRef = useRef({});\n    const messagesEndRef = useRef();\n    const socketEventsSetupRef = useRef(false);\n\n    // WebRTC Configuration\n    const configuration = {\n        iceServers: [\n            { urls: 'stun:stun.l.google.com:19302' },\n            { urls: 'stun:stun1.l.google.com:19302' },\n            { urls: 'stun:stun2.l.google.com:19302' },\n            {\n                urls: 'turn:openrelay.metered.ca:80',\n                username: 'openrelayproject',\n                credential: 'openrelayproject'\n            },\n            {\n                urls: 'turn:openrelay.metered.ca:443',\n                username: 'openrelayproject',\n                credential: 'openrelayproject'\n            }\n        ]\n    };\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem('username');\n        if (!storedUsername) {\n            navigate('/');\n            return;\n        }\n        setUsername(storedUsername);\n\n        // Initialize socket connection\n        socketRef.current = io('http://localhost:5001', {\n            withCredentials: true\n        });\n\n        // Set up socket event handlers (only once)\n        if (!socketEventsSetupRef.current) {\n            // Handle code updates\n            socketRef.current.on('code_updated', (data) => {\n                if (data.username !== storedUsername) {\n                    setCode(data.code);\n                }\n            });\n\n            // Handle language updates\n            socketRef.current.on('language_updated', (data) => {\n                if (data.username !== storedUsername) {\n                    setSelectedLanguage(data.language);\n                }\n            });\n\n            // Handle chat messages\n            socketRef.current.on('new_message', (data) => {\n                setMessages(prev => [...prev, data]);\n            });\n\n            // Handle user join/leave\n            socketRef.current.on('user_joined', (data) => {\n                setMessages(prev => [...prev, { username: 'System', message: `${data.username} joined the room` }]);\n                setParticipants(prev => {\n                    // Only add participant if they're not already in the list\n                    if (!prev.includes(data.username)) {\n                        return [...prev, data.username];\n                    }\n                    return prev;\n                });\n                \n                if (isVoiceEnabled && localStreamRef.current) {\n                    initializePeerConnection(data.username);\n                }\n            });\n\n            socketRef.current.on('user_left', (data) => {\n                setMessages(prev => [...prev, { username: 'System', message: `${data.username} left the room` }]);\n                setParticipants(prev => prev.filter(user => user !== data.username));\n                cleanupPeerConnection(data.username);\n            });\n\n            socketEventsSetupRef.current = true;\n        }\n\n        // Join room\n        socketRef.current.emit('join', { room: roomId, username: storedUsername });\n\n        return () => {\n            socketRef.current.emit('leave', { room: roomId, username: storedUsername });\n            socketRef.current.disconnect();\n            cleanupAllPeerConnections();\n        };\n    }, [roomId, navigate]);\n\n    // Effect for handling voice connections when isVoiceEnabled changes\n    useEffect(() => {\n        if (isVoiceEnabled && participants.length > 0) {\n            participants.forEach(participant => {\n                if (participant !== username) {\n                    initializePeerConnection(participant);\n                }\n            });\n        }\n    }, [isVoiceEnabled, participants, username]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    // Initialize WebRTC\n    const initializeWebRTC = async () => {\n        try {\n            console.log(\"Initializing WebRTC...\");\n            // Get user media\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    autoGainControl: true\n                }\n            });\n            \n            console.log(\"User media acquired successfully\");\n            localStreamRef.current = stream;\n            setIsVoiceEnabled(true);\n            setIsConnected(true);\n            setIsMuted(false); // Start unmuted by default\n\n            // Set up WebRTC event handlers\n            setupWebRTCEventHandlers();\n            \n            console.log(\"WebRTC initialized successfully\");\n        } catch (error) {\n            console.error('Error initializing WebRTC:', error);\n            alert(\"Error accessing microphone. Please make sure your microphone is connected and you've granted permission.\");\n            setIsVoiceEnabled(false);\n            setIsConnected(false);\n        }\n    };\n\n    // Create a new peer connection\n    const createPeerConnection = (targetUsername) => {\n        if (targetUsername === username) return null;\n        console.log(`Creating peer connection with ${targetUsername}`);\n\n        // Close existing connection if it exists\n        if (peerConnectionsRef.current[targetUsername]) {\n            peerConnectionsRef.current[targetUsername].close();\n        }\n\n        const pc = new RTCPeerConnection(configuration);\n        peerConnectionsRef.current[targetUsername] = pc;\n\n        // Log connection state changes\n        pc.onconnectionstatechange = () => {\n            console.log(`Connection state with ${targetUsername}: ${pc.connectionState}`);\n        };\n\n        pc.oniceconnectionstatechange = () => {\n            console.log(`ICE connection state with ${targetUsername}: ${pc.iceConnectionState}`);\n        };\n\n        // Add local stream to the connection\n        if (localStreamRef.current) {\n            localStreamRef.current.getTracks().forEach(track => {\n                console.log(`Adding track to peer connection with ${targetUsername}`, track);\n                pc.addTrack(track, localStreamRef.current);\n            });\n        } else {\n            console.error(\"Local stream not available when creating peer connection\");\n            return null;\n        }\n\n        // Handle ICE candidates\n        pc.onicecandidate = (event) => {\n            if (event.candidate) {\n                console.log(`Sending ICE candidate to ${targetUsername}`, event.candidate);\n                socketRef.current.emit('webrtc_ice', {\n                    room: roomId,\n                    candidate: event.candidate,\n                    from: username,\n                    to: targetUsername\n                });\n            }\n        };\n\n        // Handle incoming audio stream\n        pc.ontrack = (event) => {\n            console.log(`Received track from ${targetUsername}`, event.streams[0]);\n            const audioEl = document.createElement('audio');\n            audioEl.srcObject = event.streams[0];\n            audioEl.id = `audio-${targetUsername}`;\n            audioEl.autoplay = true;\n            audioEl.controls = false;\n            document.body.appendChild(audioEl);\n        };\n\n        return pc;\n    };\n\n    // Set up WebRTC event handlers\n    const setupWebRTCEventHandlers = () => {\n        // Handle incoming offer\n        socketRef.current.on('webrtc_offer', async (data) => {\n            if (data.from === username) return;\n            \n            console.log(`Received offer from ${data.from}`, data.offer);\n            \n            const pc = createPeerConnection(data.from);\n            if (!pc) return;\n\n            try {\n                await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n                const answer = await pc.createAnswer();\n                await pc.setLocalDescription(answer);\n\n                console.log(`Sending answer to ${data.from}`, answer);\n                socketRef.current.emit('webrtc_answer', {\n                    room: roomId,\n                    answer: answer,\n                    from: username,\n                    to: data.from\n                });\n            } catch (error) {\n                console.error('Error handling offer:', error);\n            }\n        });\n\n        // Handle incoming answer\n        socketRef.current.on('webrtc_answer', async (data) => {\n            if (data.from === username) return;\n            \n            console.log(`Received answer from ${data.from}`, data.answer);\n            \n            const pc = peerConnectionsRef.current[data.from];\n            if (pc) {\n                try {\n                    await pc.setRemoteDescription(new RTCSessionDescription(data.answer));\n                    console.log(`Successfully set remote description for ${data.from}`);\n                } catch (error) {\n                    console.error('Error handling answer:', error);\n                }\n            }\n        });\n\n        // Handle ICE candidates\n        socketRef.current.on('webrtc_ice', async (data) => {\n            if (data.from === username) return;\n            \n            console.log(`Received ICE candidate from ${data.from}`, data.candidate);\n            \n            const pc = peerConnectionsRef.current[data.from];\n            if (pc) {\n                try {\n                    await pc.addIceCandidate(new RTCIceCandidate(data.candidate));\n                    console.log(`Successfully added ICE candidate for ${data.from}`);\n                } catch (error) {\n                    console.error('Error handling ICE candidate:', error);\n                }\n            }\n        });\n    };\n\n    // Initialize peer connection and send offer\n    const initializePeerConnection = async (targetUsername) => {\n        if (targetUsername === username) return;\n        console.log(`Initializing peer connection with ${targetUsername}`);\n\n        const pc = createPeerConnection(targetUsername);\n        if (!pc) return;\n\n        try {\n            const offer = await pc.createOffer();\n            await pc.setLocalDescription(offer);\n\n            console.log(`Sending offer to ${targetUsername}`, offer);\n            socketRef.current.emit('webrtc_offer', {\n                room: roomId,\n                offer: offer,\n                from: username,\n                to: targetUsername\n            });\n        } catch (error) {\n            console.error('Error creating offer:', error);\n        }\n    };\n\n    // Clean up peer connection\n    const cleanupPeerConnection = (username) => {\n        if (peerConnectionsRef.current[username]) {\n            console.log(`Cleaning up peer connection with ${username}`);\n            peerConnectionsRef.current[username].close();\n            delete peerConnectionsRef.current[username];\n        }\n        \n        // Remove audio element\n        const audioEl = document.getElementById(`audio-${username}`);\n        if (audioEl) {\n            audioEl.remove();\n        }\n    };\n\n    // Clean up all peer connections\n    const cleanupAllPeerConnections = () => {\n        console.log(\"Cleaning up all peer connections\");\n        Object.keys(peerConnectionsRef.current).forEach(cleanupPeerConnection);\n        \n        // Stop local media stream\n        if (localStreamRef.current) {\n            localStreamRef.current.getTracks().forEach(track => {\n                track.stop();\n            });\n            localStreamRef.current = null;\n        }\n        \n        // Remove all audio elements\n        document.querySelectorAll('audio[id^=\"audio-\"]').forEach(el => el.remove());\n    };\n\n    // Toggle voice chat\n    const toggleVoiceChat = async () => {\n        if (!isVoiceEnabled) {\n            await initializeWebRTC();\n        } else {\n            cleanupAllPeerConnections();\n            setIsVoiceEnabled(false);\n            setIsConnected(false);\n            setIsMuted(true);\n        }\n    };\n\n    // Toggle mute\n    const toggleMute = () => {\n        if (localStreamRef.current) {\n            localStreamRef.current.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n            });\n            setIsMuted(!isMuted);\n        }\n    };\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        socketRef.current.emit('code_change', {\n            room: roomId,\n            code: value,\n            username: username\n        });\n    };\n\n    const handleLanguageChange = (e) => {\n        const newLanguage = e.target.value;\n        setSelectedLanguage(newLanguage);\n        socketRef.current.emit('language_change', {\n            room: roomId,\n            language: newLanguage,\n            username: username\n        });\n    };\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        if (message.trim()) {\n            socketRef.current.emit('chat_message', {\n                room: roomId,\n                message: message.trim(),\n                username: username\n            });\n            setMessage('');\n        }\n    };\n\n    const executeCode = async () => {\n        setIsExecuting(true);\n        setOutput('');\n        setError('');\n        \n        try {\n            const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n                language: selectedLanguage,\n                version: LANGUAGE_VERSIONS[selectedLanguage],\n                files: [\n                    {\n                        content: code\n                    }\n                ]\n            });\n            \n            if (response.data.run) {\n                setOutput(response.data.run.output);\n                if (response.data.run.stderr) {\n                    setError(response.data.run.stderr);\n                }\n            }\n        } catch (err) {\n            setError(err.response?.data?.error || 'Failed to execute code');\n        } finally {\n            setIsExecuting(false);\n        }\n    };\n\n    return (\n        <div className=\"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\">\n            {/* Left Panel - Code Editor */}\n            <div className=\"w-2/3 flex flex-col\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\">\n                    <div className=\"flex items-center space-x-4\">\n                        <span className=\"text-lg font-mono font-bold text-emerald-400\">Room: {roomId}</span>\n                        <select\n                            value={selectedLanguage}\n                            onChange={handleLanguageChange}\n                            className=\"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        >\n                            {LANGUAGES.map(lang => (\n                                <option key={lang.value} value={lang.value}>\n                                    {lang.label}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <button\n                        onClick={executeCode}\n                        disabled={isExecuting}\n                        className=\"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\"\n                    >\n                        {isExecuting ? 'Executing...' : 'Run Code'}\n                    </button>\n                </div>\n                <div className=\"flex-1\">\n                    <Editor\n                        height=\"100%\"\n                        language={LANGUAGE_MAPPING[selectedLanguage]}\n                        value={code}\n                        onChange={handleCodeChange}\n                        theme=\"vs-dark\"\n                        options={{\n                            minimap: { enabled: false },\n                            fontSize: 14,\n                            wordWrap: 'on',\n                            automaticLayout: true,\n                            fontFamily: 'Fira Code, monospace'\n                        }}\n                    />\n                </div>\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <h3 className=\"text-lg font-mono font-bold text-emerald-400 mb-2\">Output</h3>\n                    <div className=\"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\">\n                        {output && <div className=\"text-green-400\">{output}</div>}\n                        {error && <div className=\"text-red-400\">{error}</div>}\n                    </div>\n                </div>\n            </div>\n\n            {/* Right Panel - Chat and Voice */}\n            <div className=\"w-1/3 flex flex-col border-l border-gray-700\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center\">\n                    <div className=\"flex items-center space-x-2\">\n                        <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-emerald-500' : 'bg-red-500'}`}></div>\n                        <span className=\"font-mono font-bold text-emerald-400\">Participants ({participants.length})</span>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                        <button\n                            onClick={toggleVoiceChat}\n                            className={`px-4 py-2 rounded-lg font-bold ${\n                                isVoiceEnabled ? 'bg-emerald-500 hover:bg-emerald-600' : 'bg-gray-600 hover:bg-gray-700'\n                            } text-white transition-colors`}\n                        >\n                            {isVoiceEnabled ? 'Disable Voice' : 'Enable Voice'}\n                        </button>\n                        {isVoiceEnabled && (\n                            <button\n                                onClick={toggleMute}\n                                className={`px-4 py-2 rounded-lg font-bold ${\n                                    isMuted ? 'bg-red-500 hover:bg-red-600' : 'bg-emerald-500 hover:bg-emerald-600'\n                                } text-white transition-colors`}\n                            >\n                                {isMuted ? 'Unmute' : 'Mute'}\n                            </button>\n                        )}\n                    </div>\n                </div>\n                <div className=\"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\">\n                    {messages.map((msg, index) => (\n                        <div key={index} className=\"mb-2 p-2 rounded-lg bg-gray-800/50 backdrop-blur-sm\">\n                            <span className=\"font-bold text-emerald-400\">{msg.username}: </span>\n                            <span>{msg.message}</span>\n                        </div>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </div>\n                <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <div className=\"flex\">\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                            className=\"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Room; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}