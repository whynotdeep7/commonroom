{"ast":null,"code":"var _jsxFileName = \"/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  value: 'python',\n  label: 'Python'\n}, {\n  value: 'javascript',\n  label: 'JavaScript'\n}, {\n  value: 'java',\n  label: 'Java'\n}, {\n  value: 'cpp',\n  label: 'C++'\n}, {\n  value: 'csharp',\n  label: 'C#'\n}, {\n  value: 'typescript',\n  label: 'TypeScript'\n}, {\n  value: 'go',\n  label: 'Go'\n}, {\n  value: 'rust',\n  label: 'Rust'\n}];\n\n// Map language values to Monaco editor language ids\nconst LANGUAGE_MAPPING = {\n  'python': 'python',\n  'javascript': 'javascript',\n  'java': 'java',\n  'cpp': 'cpp',\n  'csharp': 'csharp',\n  'typescript': 'typescript',\n  'go': 'go',\n  'rust': 'rust'\n};\n\n// Initial code templates for each language\nconst CODE_TEMPLATES = {\n  'python': '# Welcome to Python\\n\\ndef greeting(name):\\n    return f\"Hello, {name}!\"\\n\\n# Main program\\nif __name__ == \"__main__\":\\n    print(greeting(\"World\"))\\n    # Add your code here',\n  'javascript': '// Welcome to JavaScript\\n\\nfunction greeting(name) {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n  'java': '// Welcome to Java\\n\\npublic class Main {\\n    public static String greeting(String name) {\\n        return \"Hello, \" + name + \"!\";\\n    }\\n    \\n    public static void main(String[] args) {\\n        System.out.println(greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n  'cpp': '// Welcome to C++\\n#include <iostream>\\n#include <string>\\n\\nusing namespace std;\\n\\nstring greeting(const string& name) {\\n    return \"Hello, \" + name + \"!\";\\n}\\n\\nint main() {\\n    cout << greeting(\"World\") << endl;\\n    // Add your code here\\n    return 0;\\n}',\n  'csharp': '// Welcome to C#\\nusing System;\\n\\nclass Program {\\n    static string Greeting(string name) {\\n        return $\"Hello, {name}!\";\\n    }\\n    \\n    static void Main() {\\n        Console.WriteLine(Greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n  'typescript': '// Welcome to TypeScript\\n\\nfunction greeting(name: string): string {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n  'go': '// Welcome to Go\\npackage main\\n\\nimport (\\n    \"fmt\"\\n)\\n\\nfunc greeting(name string) string {\\n    return fmt.Sprintf(\"Hello, %s!\", name)\\n}\\n\\nfunc main() {\\n    fmt.Println(greeting(\"World\"))\\n    // Add your code here\\n}',\n  'rust': '// Welcome to Rust\\n\\nfn greeting(name: &str) -> String {\\n    format!(\"Hello, {}!\", name)\\n}\\n\\nfn main() {\\n    println!(\"{}\", greeting(\"World\"));\\n    // Add your code here\\n}'\n};\nconst Room = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [code, setCode] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('python');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const [output, setOutput] = useState('');\n  const [error, setError] = useState('');\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [participants, setParticipants] = useState([]);\n  const [isSocketConnected, setIsSocketConnected] = useState(false);\n  const socketRef = useRef();\n  const messagesEndRef = useRef();\n  const editorRef = useRef(null);\n\n  // Function to handle editor mounting\n  const handleEditorDidMount = editor => {\n    editorRef.current = editor;\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    if (!storedUsername) {\n      navigate('/');\n      return;\n    }\n    setUsername(storedUsername);\n\n    // Initialize socket connection\n    socketRef.current = io('http://localhost:5001', {\n      withCredentials: true,\n      reconnection: true,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      reconnectionAttempts: Infinity\n    });\n\n    // Socket connection events\n    socketRef.current.on('connect', () => {\n      console.log('Socket connected');\n      setIsSocketConnected(true);\n\n      // Join room upon connection\n      socketRef.current.emit('join', {\n        room: roomId,\n        username: storedUsername\n      });\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Socket disconnected');\n      setIsSocketConnected(false);\n    });\n    socketRef.current.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setIsSocketConnected(false);\n    });\n\n    // Handle initial state\n    socketRef.current.on('initial_state', data => {\n      console.log('Received initial state:', data);\n      if (data.code) setCode(data.code);\n      if (data.language) setSelectedLanguage(data.language);\n      if (data.participants) setParticipants(data.participants);\n    });\n\n    // Handle code updates\n    socketRef.current.on('code_updated', data => {\n      console.log('Code updated by:', data.username);\n      if (data.username !== storedUsername) {\n        setCode(data.code);\n      }\n    });\n\n    // Handle language updates\n    socketRef.current.on('language_updated', data => {\n      console.log('Language updated by:', data.username);\n      if (data.username !== storedUsername) {\n        setSelectedLanguage(data.language);\n      }\n    });\n\n    // Handle chat messages\n    socketRef.current.on('new_message', data => {\n      console.log('New message:', data);\n      setMessages(prev => [...prev, data]);\n    });\n\n    // Handle user join/leave\n    socketRef.current.on('user_joined', data => {\n      console.log('User joined:', data.username);\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} joined the room`\n      }]);\n      setParticipants(prev => {\n        // Only add participant if they're not already in the list\n        if (!prev.includes(data.username)) {\n          return [...prev, data.username];\n        }\n        return prev;\n      });\n    });\n    socketRef.current.on('user_left', data => {\n      console.log('User left:', data.username);\n      setMessages(prev => [...prev, {\n        username: 'System',\n        message: `${data.username} left the room`\n      }]);\n      setParticipants(prev => prev.filter(user => user !== data.username));\n    });\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.emit('leave', {\n          room: roomId,\n          username: storedUsername\n        });\n        socketRef.current.disconnect();\n      }\n    };\n  }, [roomId, navigate]);\n\n  // Effect to update code template when language changes\n  useEffect(() => {\n    // Always update the code template when the language changes\n    console.log(`Setting template for ${selectedLanguage}`);\n    setCode(CODE_TEMPLATES[selectedLanguage]);\n  }, [selectedLanguage]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleCodeChange = value => {\n    setCode(value);\n    if (socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('code_change', {\n        room: roomId,\n        code: value,\n        username: username\n      });\n    }\n  };\n  const handleLanguageChange = e => {\n    const newLanguage = e.target.value;\n    setSelectedLanguage(newLanguage);\n    if (socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('language_change', {\n        room: roomId,\n        language: newLanguage,\n        username: username\n      });\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (message.trim() && socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('chat_message', {\n        room: roomId,\n        message: message.trim(),\n        username: username\n      });\n      setMessage('');\n    }\n  };\n  const executeCode = async () => {\n    setIsExecuting(true);\n    setOutput('');\n    setError('');\n    try {\n      const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n        language: selectedLanguage,\n        version: LANGUAGE_VERSIONS[selectedLanguage],\n        files: [{\n          content: code\n        }]\n      });\n      if (response.data.run) {\n        setOutput(response.data.run.output);\n        if (response.data.run.stderr) {\n          setError(response.data.run.stderr);\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to execute code');\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  const handleLeaveRoom = () => {\n    // Emit leave event to server\n    if (socketRef.current && socketRef.current.connected) {\n      socketRef.current.emit('leave', {\n        room: roomId,\n        username: username\n      });\n      socketRef.current.disconnect();\n    }\n\n    // Navigate back to home\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-2/3 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-mono font-bold text-emerald-400\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedLanguage,\n            onChange: handleLanguageChange,\n            className: \"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\",\n            children: LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: lang.value,\n              children: lang.label\n            }, lang.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `ml-4 px-2 py-1 rounded-full ${isSocketConnected ? 'bg-emerald-500' : 'bg-red-500'} text-xs`,\n            children: isSocketConnected ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLeaveRoom,\n            className: \"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 font-bold transition-colors\",\n            children: \"Leave Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: executeCode,\n            disabled: isExecuting,\n            className: \"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\",\n            children: isExecuting ? 'Executing...' : 'Run Code'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"100%\",\n          language: LANGUAGE_MAPPING[selectedLanguage],\n          value: code,\n          onChange: handleCodeChange,\n          onMount: handleEditorDidMount,\n          theme: \"vs-dark\",\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14,\n            wordWrap: 'on',\n            automaticLayout: true,\n            fontFamily: 'Fira Code, monospace'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-mono font-bold text-emerald-400 mb-2\",\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\",\n          children: [output && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green-400\",\n            children: output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 36\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-400\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 flex flex-col border-l border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-mono font-bold text-emerald-400 mb-2\",\n            children: [\"Participants (\", participants.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-900 rounded-lg p-2 max-h-24 overflow-y-auto\",\n            children: participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-1 px-2 rounded mb-1 bg-gray-800 flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-mono\",\n                children: participant\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 37\n              }, this), participant === username && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-xs bg-emerald-500 px-2 py-0.5 rounded\",\n                children: \"You\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 66\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-mono font-bold text-emerald-400 mb-2\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-2 rounded-lg ${msg.username === 'System' ? 'bg-gray-800/50' : 'bg-gray-800/90'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-bold ${msg.username === 'System' ? 'text-gray-400' : 'text-emerald-400'}`,\n              children: [msg.username, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Type a message...\",\n            className: \"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n};\n_s(Room, \"TcHAYSILlKAcUgrXRDetwiuw+8g=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","io","Editor","axios","LANGUAGE_VERSIONS","jsxDEV","_jsxDEV","LANGUAGES","value","label","LANGUAGE_MAPPING","CODE_TEMPLATES","Room","_s","roomId","navigate","username","setUsername","code","setCode","selectedLanguage","setSelectedLanguage","messages","setMessages","message","setMessage","output","setOutput","error","setError","isExecuting","setIsExecuting","participants","setParticipants","isSocketConnected","setIsSocketConnected","socketRef","messagesEndRef","editorRef","handleEditorDidMount","editor","current","storedUsername","localStorage","getItem","withCredentials","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","Infinity","on","console","log","emit","room","data","language","prev","includes","filter","user","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","handleCodeChange","connected","handleLanguageChange","e","newLanguage","target","handleSendMessage","preventDefault","trim","executeCode","response","post","version","files","content","run","stderr","err","_err$response","_err$response$data","handleLeaveRoom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","lang","onClick","disabled","height","onMount","theme","options","minimap","enabled","fontSize","wordWrap","automaticLayout","fontFamily","length","participant","index","msg","ref","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/deeps/Desktop/vibe/frontend/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport Editor from '@monaco-editor/react';\nimport axios from 'axios';\nimport { LANGUAGE_VERSIONS } from '../constants';\n\nconst LANGUAGES = [\n    { value: 'python', label: 'Python' },\n    { value: 'javascript', label: 'JavaScript' },\n    { value: 'java', label: 'Java' },\n    { value: 'cpp', label: 'C++' },\n    { value: 'csharp', label: 'C#' },\n    { value: 'typescript', label: 'TypeScript' },\n    { value: 'go', label: 'Go' },\n    { value: 'rust', label: 'Rust' }\n];\n\n// Map language values to Monaco editor language ids\nconst LANGUAGE_MAPPING = {\n    'python': 'python',\n    'javascript': 'javascript',\n    'java': 'java',\n    'cpp': 'cpp',\n    'csharp': 'csharp',\n    'typescript': 'typescript',\n    'go': 'go',\n    'rust': 'rust'\n};\n\n// Initial code templates for each language\nconst CODE_TEMPLATES = {\n    'python': '# Welcome to Python\\n\\ndef greeting(name):\\n    return f\"Hello, {name}!\"\\n\\n# Main program\\nif __name__ == \"__main__\":\\n    print(greeting(\"World\"))\\n    # Add your code here',\n    \n    'javascript': '// Welcome to JavaScript\\n\\nfunction greeting(name) {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n    \n    'java': '// Welcome to Java\\n\\npublic class Main {\\n    public static String greeting(String name) {\\n        return \"Hello, \" + name + \"!\";\\n    }\\n    \\n    public static void main(String[] args) {\\n        System.out.println(greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n    \n    'cpp': '// Welcome to C++\\n#include <iostream>\\n#include <string>\\n\\nusing namespace std;\\n\\nstring greeting(const string& name) {\\n    return \"Hello, \" + name + \"!\";\\n}\\n\\nint main() {\\n    cout << greeting(\"World\") << endl;\\n    // Add your code here\\n    return 0;\\n}',\n    \n    'csharp': '// Welcome to C#\\nusing System;\\n\\nclass Program {\\n    static string Greeting(string name) {\\n        return $\"Hello, {name}!\";\\n    }\\n    \\n    static void Main() {\\n        Console.WriteLine(Greeting(\"World\"));\\n        // Add your code here\\n    }\\n}',\n    \n    'typescript': '// Welcome to TypeScript\\n\\nfunction greeting(name: string): string {\\n    return `Hello, ${name}!`;\\n}\\n\\n// Main program\\nconsole.log(greeting(\"World\"));\\n// Add your code here',\n    \n    'go': '// Welcome to Go\\npackage main\\n\\nimport (\\n    \"fmt\"\\n)\\n\\nfunc greeting(name string) string {\\n    return fmt.Sprintf(\"Hello, %s!\", name)\\n}\\n\\nfunc main() {\\n    fmt.Println(greeting(\"World\"))\\n    // Add your code here\\n}',\n    \n    'rust': '// Welcome to Rust\\n\\nfn greeting(name: &str) -> String {\\n    format!(\"Hello, {}!\", name)\\n}\\n\\nfn main() {\\n    println!(\"{}\", greeting(\"World\"));\\n    // Add your code here\\n}'\n};\n\nconst Room = () => {\n    const { roomId } = useParams();\n    const navigate = useNavigate();\n    const [username, setUsername] = useState('');\n    const [code, setCode] = useState('');\n    const [selectedLanguage, setSelectedLanguage] = useState('python');\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const [output, setOutput] = useState('');\n    const [error, setError] = useState('');\n    const [isExecuting, setIsExecuting] = useState(false);\n    const [participants, setParticipants] = useState([]);\n    const [isSocketConnected, setIsSocketConnected] = useState(false);\n    \n    const socketRef = useRef();\n    const messagesEndRef = useRef();\n    const editorRef = useRef(null);\n    \n    // Function to handle editor mounting\n    const handleEditorDidMount = (editor) => {\n        editorRef.current = editor;\n    };\n\n    useEffect(() => {\n        const storedUsername = localStorage.getItem('username');\n        if (!storedUsername) {\n            navigate('/');\n            return;\n        }\n        setUsername(storedUsername);\n\n        // Initialize socket connection\n        socketRef.current = io('http://localhost:5001', {\n            withCredentials: true,\n            reconnection: true,\n            reconnectionDelay: 1000,\n            reconnectionDelayMax: 5000,\n            reconnectionAttempts: Infinity\n        });\n\n        // Socket connection events\n        socketRef.current.on('connect', () => {\n            console.log('Socket connected');\n            setIsSocketConnected(true);\n            \n            // Join room upon connection\n            socketRef.current.emit('join', { room: roomId, username: storedUsername });\n        });\n\n        socketRef.current.on('disconnect', () => {\n            console.log('Socket disconnected');\n            setIsSocketConnected(false);\n        });\n\n        socketRef.current.on('connect_error', (error) => {\n            console.error('Socket connection error:', error);\n            setIsSocketConnected(false);\n        });\n\n        // Handle initial state\n        socketRef.current.on('initial_state', (data) => {\n            console.log('Received initial state:', data);\n            if (data.code) setCode(data.code);\n            if (data.language) setSelectedLanguage(data.language);\n            if (data.participants) setParticipants(data.participants);\n        });\n\n        // Handle code updates\n        socketRef.current.on('code_updated', (data) => {\n            console.log('Code updated by:', data.username);\n            if (data.username !== storedUsername) {\n                setCode(data.code);\n            }\n        });\n\n        // Handle language updates\n        socketRef.current.on('language_updated', (data) => {\n            console.log('Language updated by:', data.username);\n            if (data.username !== storedUsername) {\n                setSelectedLanguage(data.language);\n            }\n        });\n\n        // Handle chat messages\n        socketRef.current.on('new_message', (data) => {\n            console.log('New message:', data);\n            setMessages(prev => [...prev, data]);\n        });\n\n        // Handle user join/leave\n        socketRef.current.on('user_joined', (data) => {\n            console.log('User joined:', data.username);\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} joined the room` }]);\n            setParticipants(prev => {\n                // Only add participant if they're not already in the list\n                if (!prev.includes(data.username)) {\n                    return [...prev, data.username];\n                }\n                return prev;\n            });\n        });\n\n        socketRef.current.on('user_left', (data) => {\n            console.log('User left:', data.username);\n            setMessages(prev => [...prev, { username: 'System', message: `${data.username} left the room` }]);\n            setParticipants(prev => prev.filter(user => user !== data.username));\n        });\n\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.emit('leave', { room: roomId, username: storedUsername });\n                socketRef.current.disconnect();\n            }\n        };\n    }, [roomId, navigate]);\n\n    // Effect to update code template when language changes\n    useEffect(() => {\n        // Always update the code template when the language changes\n        console.log(`Setting template for ${selectedLanguage}`);\n        setCode(CODE_TEMPLATES[selectedLanguage]);\n    }, [selectedLanguage]);\n\n    useEffect(() => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, [messages]);\n\n    const handleCodeChange = (value) => {\n        setCode(value);\n        if (socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('code_change', {\n                room: roomId,\n                code: value,\n                username: username\n            });\n        }\n    };\n\n    const handleLanguageChange = (e) => {\n        const newLanguage = e.target.value;\n        setSelectedLanguage(newLanguage);\n        if (socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('language_change', {\n                room: roomId,\n                language: newLanguage,\n                username: username\n            });\n        }\n    };\n\n    const handleSendMessage = (e) => {\n        e.preventDefault();\n        if (message.trim() && socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('chat_message', {\n                room: roomId,\n                message: message.trim(),\n                username: username\n            });\n            setMessage('');\n        }\n    };\n\n    const executeCode = async () => {\n        setIsExecuting(true);\n        setOutput('');\n        setError('');\n        \n        try {\n            const response = await axios.post('https://emkc.org/api/v2/piston/execute', {\n                language: selectedLanguage,\n                version: LANGUAGE_VERSIONS[selectedLanguage],\n                files: [\n                    {\n                        content: code\n                    }\n                ]\n            });\n            \n            if (response.data.run) {\n                setOutput(response.data.run.output);\n                if (response.data.run.stderr) {\n                    setError(response.data.run.stderr);\n                }\n            }\n        } catch (err) {\n            setError(err.response?.data?.error || 'Failed to execute code');\n        } finally {\n            setIsExecuting(false);\n        }\n    };\n\n    const handleLeaveRoom = () => {\n        // Emit leave event to server\n        if (socketRef.current && socketRef.current.connected) {\n            socketRef.current.emit('leave', { room: roomId, username: username });\n            socketRef.current.disconnect();\n        }\n        \n        // Navigate back to home\n        navigate('/');\n    };\n\n    return (\n        <div className=\"flex h-screen bg-gradient-to-br from-gray-900 to-gray-800 text-white\">\n            {/* Left Panel - Code Editor */}\n            <div className=\"w-2/3 flex flex-col\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl flex justify-between items-center border-b border-gray-700\">\n                    <div className=\"flex items-center space-x-4\">\n                        <span className=\"text-lg font-mono font-bold text-emerald-400\">Room: {roomId}</span>\n                        <select\n                            value={selectedLanguage}\n                            onChange={handleLanguageChange}\n                            className=\"px-4 py-2 bg-gray-700 border border-emerald-400 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        >\n                            {LANGUAGES.map(lang => (\n                                <option key={lang.value} value={lang.value}>\n                                    {lang.label}\n                                </option>\n                            ))}\n                        </select>\n                        <div className={`ml-4 px-2 py-1 rounded-full ${isSocketConnected ? 'bg-emerald-500' : 'bg-red-500'} text-xs`}>\n                            {isSocketConnected ? 'Connected' : 'Disconnected'}\n                        </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                        <button\n                            onClick={handleLeaveRoom}\n                            className=\"px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 font-bold transition-colors\"\n                        >\n                            Leave Room\n                        </button>\n                        <button\n                            onClick={executeCode}\n                            disabled={isExecuting}\n                            className=\"px-4 py-2 bg-emerald-500 text-white rounded-lg hover:bg-emerald-600 disabled:opacity-50 font-bold transition-colors\"\n                        >\n                            {isExecuting ? 'Executing...' : 'Run Code'}\n                        </button>\n                    </div>\n                </div>\n                <div className=\"flex-1\">\n                    <Editor\n                        height=\"100%\"\n                        language={LANGUAGE_MAPPING[selectedLanguage]}\n                        value={code}\n                        onChange={handleCodeChange}\n                        onMount={handleEditorDidMount}\n                        theme=\"vs-dark\"\n                        options={{\n                            minimap: { enabled: false },\n                            fontSize: 14,\n                            wordWrap: 'on',\n                            automaticLayout: true,\n                            fontFamily: 'Fira Code, monospace'\n                        }}\n                    />\n                </div>\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <h3 className=\"text-lg font-mono font-bold text-emerald-400 mb-2\">Output</h3>\n                    <div className=\"bg-gray-900 text-white p-4 rounded-lg font-mono text-sm h-32 overflow-auto border border-gray-700\">\n                        {output && <div className=\"text-green-400\">{output}</div>}\n                        {error && <div className=\"text-red-400\">{error}</div>}\n                    </div>\n                </div>\n            </div>\n\n            {/* Right Panel - Chat */}\n            <div className=\"w-1/3 flex flex-col border-l border-gray-700\">\n                <div className=\"p-4 bg-gray-800/50 backdrop-blur-sm shadow-xl\">\n                    <div className=\"mt-4\">\n                        <h3 className=\"font-mono font-bold text-emerald-400 mb-2\">Participants ({participants.length})</h3>\n                        <div className=\"bg-gray-900 rounded-lg p-2 max-h-24 overflow-y-auto\">\n                            {participants.map((participant, index) => (\n                                <div key={index} className=\"py-1 px-2 rounded mb-1 bg-gray-800 flex items-center\">\n                                    <span className=\"font-mono\">{participant}</span>\n                                    {participant === username && <span className=\"ml-2 text-xs bg-emerald-500 px-2 py-0.5 rounded\">You</span>}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                \n                <div className=\"flex-1 p-4 overflow-auto bg-gray-900/50 backdrop-blur-sm\">\n                    <h3 className=\"font-mono font-bold text-emerald-400 mb-2\">Chat</h3>\n                    <div className=\"space-y-2\">\n                        {messages.map((msg, index) => (\n                            <div key={index} className={`p-2 rounded-lg ${msg.username === 'System' ? 'bg-gray-800/50' : 'bg-gray-800/90'}`}>\n                                <span className={`font-bold ${msg.username === 'System' ? 'text-gray-400' : 'text-emerald-400'}`}>{msg.username}: </span>\n                                <span>{msg.message}</span>\n                            </div>\n                        ))}\n                        <div ref={messagesEndRef} />\n                    </div>\n                </div>\n                \n                <form onSubmit={handleSendMessage} className=\"p-4 bg-gray-800/50 backdrop-blur-sm border-t border-gray-700\">\n                    <div className=\"flex\">\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            placeholder=\"Type a message...\"\n                            className=\"flex-1 px-4 py-2 bg-gray-700 border border-gray-600 rounded-l-lg text-white focus:outline-none focus:ring-2 focus:ring-emerald-400\"\n                        />\n                        <button\n                            type=\"submit\"\n                            className=\"px-4 py-2 bg-emerald-500 text-white rounded-r-lg hover:bg-emerald-600 font-bold transition-colors\"\n                        >\n                            Send\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Room; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}